openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://api-v2.upstox.com
tags:
- name: Login
- name: User
- name: Portfolio
- name: Order
- name: Market Quote
- name: Market Holidays and Timings
- name: Options
- name: Trade Profit And Loss
- name: History
- name: Charge
- name: Websocket
- name: Post Trade
paths:
  /v2/portfolio/convert-position:
    put:
      tags:
      - Portfolio
      summary: Convert Positions
      description: Convert the margin product of an open position
      operationId: convertPositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConvertPositionRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Authorization Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConvertPositionResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'PUT' \n   'https://api.upstox.com/v2/portfolio/convert-position'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Content-Type:\
          \ application/json' \n -H 'Authorization: Bearer access_token' \n -d '{\n\
          \  \"instrument_token\": \"151064324\",\n  \"new_product\": \"D\",\n  \"\
          old_product\": \"I\",\n  \"transaction_type\": \"BUY\",\n  \"quantity\"\
          : 1\n}'"
  /v2/order/modify:
    put:
      tags:
      - Order
      summary: Modify order
      description: "This API allows you to modify an order. For modification orderId\
        \ is mandatory. With orderId you need to send the optional parameter which\
        \ needs to be modified. In case the optional parameters aren't sent, the default\
        \ will be considered from the original order"
      operationId: modifyOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyOrderRequest'
        required: true
      responses:
        "400":
          description: UDAPI100010 - Unknown order id | order request rejected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyOrderResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'PUT' \n   'https://api.upstox.com/v2/order/modify' \n -H\
          \ 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Content-Type:\
          \ application/json' \n -H 'Authorization: Bearer access_token' \n -d '{\n\
          \  \"quantity\": 1,\n  \"validity\": \"DAY\",\n  \"price\": 120.01,\n  \"\
          order_id\": \"1644490272000\",\n  \"order_type\": \"MARKET\",\n  \"disclosed_quantity\"\
          : 0,\n  \"trigger_price\": 0\n}'"
  /v2/order/positions/exit:
    post:
      tags:
      - Order
      summary: Exit all positions
      description: 'This API provides the functionality to exit all the positions '
      operationId: exitPositions
      parameters:
      - name: tag
        in: query
        description: The tag associated with the positions for which the positions
          must be exit
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: segment
        in: query
        description: The segment for which the positions must be exit
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "400":
          description: UDAPI1105 - Invalid segment. <br>UDAPI1108 - No open position
            available to exit.<br>UDAPI1109 - Available open positions should not
            be more than limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelOrExitMultiOrderResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'POST' \n   'https://api.upstox.com/v2/order/positions/exit?tag=xyz&segment=NSE_FO'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization:\
          \ Bearer access_token'"
  /v2/order/place:
    post:
      tags:
      - Order
      summary: Place order
      description: This API allows you to place an order to the exchange via Upstox.
      operationId: placeOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceOrderRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceOrderResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'POST' \n   'https://api.upstox.com/v2/order/place' \n -H\
          \ 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Content-Type:\
          \ application/json' \n -H 'Authorization: Bearer access_token' \n -d '{\n\
          \  \"quantity\": 1,\n  \"product\": \"D\",\n  \"validity\": \"DAY\",\n \
          \ \"price\": 0,\n  \"tag\": \"string\",\n  \"instrument_token\": \"NSE_EQ|INE848E01016\"\
          ,\n  \"order_type\": \"MARKET\",\n  \"transaction_type\": \"BUY\",\n  \"\
          disclosed_quantity\": 0,\n  \"trigger_price\": 0,\n  \"is_amo\": false\n\
          }'"
  /v2/order/multi/place:
    post:
      tags:
      - Order
      summary: Place multi order
      description: This API allows you to place multiple orders to the exchange via
        Upstox.
      operationId: placeMultiOrder
      requestBody:
        content:
          application/json:
            schema:
              maxItems: 2147483647
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/MultiOrderRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiOrderResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'POST' \n   'https://api.upstox.com/v2/order/multi/place'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Content-Type:\
          \ application/json' \n -H 'Authorization: Bearer access_token' \n -d '[{\n\
          \  \"quantity\": 1,\n  \"product\": \"D\",\n  \"validity\": \"DAY\",\n \
          \ \"price\": 0,\n  \"tag\": \"string\",\n  \"instrument_token\": \"NSE_EQ|INE848E01016\"\
          ,\n  \"order_type\": \"MARKET\",\n  \"transaction_type\": \"BUY\",\n  \"\
          disclosed_quantity\": 0,\n  \"trigger_price\": 0,\n  \"is_amo\": false\n\
          }]'"
  /v2/login/authorization/token:
    post:
      tags:
      - Login
      summary: Get token API
      description: This API provides the functionality to obtain opaque token from
        authorization_code exchange and also provides the user’s profile in the same
        response.
      operationId: token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        "400":
          description: UDAPI1017 - API Key is required <br/>UDAPI1018 - Redirect URI
            is required <br/>UDAPI1022 - Code is required <br/>UDAPI1023 - Grant type
            is required <br/>UDAPI1024 - App Secret is required <br/>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
      x-codeSamples:
      - lang: curl
        source: "curl -X 'POST' \n  'https://api.upstox.com/v2/login/authorization/token'\
          \ \n  -H 'accept: application/json' \n  -H 'Api-Version: 2.0' \n  -H 'Content-Type:\
          \ application/x-www-form-urlencoded' \n  -d 'code=code&client_id=apikey&client_secret=apisecret&redirect_uri=https%3A%2F%2Fdomain.com%2Fredirect&grant_type=authorization_code'"
  /v2/charges/margin:
    post:
      tags:
      - Charge
      summary: Calculate Margin
      description: Compute Margin
      operationId: postMargin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarginRequest'
        required: true
      responses:
        "400":
          description: UDAPI1095 - The price must be greater than zero<br>UDAPI1096
            - Quantity cannot be less than or equal to zero<br>UDAPI1097 - The quantity
            is required<br>UDAPI1098 - The instrument_token is of invalid format<br>UDAPI1099
            - The instrument key is required<br>UDAPI1100 - The product is required<br>UDAPI1101
            - The transaction_type is required<br>UDAPI1102 - The instrument limit
            has been exceeded<br>UDAPI1103 - Instrument key cannot be duplicated<br>UDAPI1104
            - Quantity should be multiple of lot size
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMarginResponse'
      security:
      - OAUTH2: []
  /v2/user/profile:
    get:
      tags:
      - User
      summary: Get profile
      description: "This API allows to fetch the complete information of the user\
        \ who is logged in including the products, order types and exchanges enabled\
        \ for the user"
      operationId: getProfile
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProfileResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n 'https://api.upstox.com/v2/user/profile' \n -H 'accept:\
          \ application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization: Bearer\
          \ access_token'"
  /v2/user/get-funds-and-margin:
    get:
      tags:
      - User
      summary: Get User Fund And Margin
      description: Shows the balance of the user in equity and commodity market.
      operationId: getUserFundMargin
      parameters:
      - name: segment
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - SEC
          - COM
      responses:
        "400":
          description: UDAPI1019 - segment is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserFundMarginResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n 'https://api.upstox.com/v2/user/get-funds-and-margin?segment=SEC'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization:\
          \ Bearer access_token'"
  /v2/trade/profit-loss/metadata:
    get:
      tags:
      - Trade Profit And Loss
      summary: Get profit and loss meta data on trades
      description: This API gives the data of the realised Profit and Loss report
        requested by a user
      operationId: getTradeWiseProfitAndLossMetaData
      parameters:
      - name: from_date
        in: query
        description: Date from which data needs to be fetched. from_date and to_date
          should fall under the same financial year as mentioned in financial_year
          attribute. Date in dd-mm-yyyy format
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 01-04-2022
      - name: to_date
        in: query
        description: Date till which data needs to be fetched. from_date and to_date
          should fall under the same financial year as mentioned in financial_year
          attribute. Date in dd-mm-yyyy format
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 31-03-2023
      - name: segment
        in: query
        description: "Segment for which data is requested can be from the following\
          \ options EQ - Equity,   FO - Futures and Options,   COM  - Commodity, \
          \  CD - Currency Derivatives"
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: EQ
      - name: financial_year
        in: query
        description: "Financial year for which data has been requested. Concatenation\
          \ of last 2 digits of from year and to year Sample:for 2021-2022, financial_year\
          \ will be 2122"
        required: true
        style: form
        explode: true
        schema:
          pattern: "^(0|[1-9][0-9]*)$"
          type: string
        example: 2223
      responses:
        "400":
          description: UDAPI1070 - The financial_year is required<br>UDAPI1067 - The
            ''segment'' is required<br>UDAPI1066 - The ''segment'' is invalid<br>UDAPI1073
            - Financial year should have max length of 4<br>UDAPI1068 - The start_date
            is required<br>UDAPI1069 - The end_date is required<br>UDAPI1105 - The
            provided dates do not fall within the specified financial year
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTradeWiseProfitAndLossMetaDataResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n   'https://api.upstox.com/v2/trade/profit-loss/metadata?start_date=01-04-2022&emd_date=30-03-2023&segment=EQ&financial_year=2223'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization:\
          \ Bearer access_token'"
  /v2/trade/profit-loss/data:
    get:
      tags:
      - Trade Profit And Loss
      summary: Get Trade-wise Profit and Loss Report Data
      description: This API gives the data of the realised Profit and Loss report
        requested by a user
      operationId: getTradeWiseProfitAndLossData
      parameters:
      - name: from_date
        in: query
        description: Date from which data needs to be fetched. from_date and to_date
          should fall under the same financial year as mentioned in financial_year
          attribute. Date in dd-mm-yyyy format
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 01-04-2022
      - name: to_date
        in: query
        description: Date till which data needs to be fetched. from_date and to_date
          should fall under the same financial year as mentioned in financial_year
          attribute. Date in dd-mm-yyyy format
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 31-03-2023
      - name: segment
        in: query
        description: "Segment for which data is requested can be from the following\
          \ options EQ - Equity,   FO - Futures and Options,   COM  - Commodity, \
          \  CD - Currency Derivatives"
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: EQ
      - name: financial_year
        in: query
        description: "Financial year for which data has been requested. Concatenation\
          \ of last 2 digits of from year and to year Sample:for 2021-2022, financial_year\
          \ will be 2122"
        required: true
        style: form
        explode: true
        schema:
          pattern: "^(0|[1-9][0-9]*)$"
          type: string
        example: 2223
      - name: page_number
        in: query
        description: "Page Number, the pages are starting from 1"
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        example: 1
      - name: page_size
        in: query
        description: Page size for pagination. The maximum page size value is obtained
          from P and L report metadata API.
        required: true
        style: form
        explode: true
        schema:
          maximum: 5000
          minimum: 1
          type: integer
          format: int32
        example: 3000
      responses:
        "400":
          description: UDAPI1070 - The financial_year is required<br>UDAPI1071 - The
            page_number is required<br>UDAPI1072 - The page_size is required<br>UDAPI1067
            - The ''segment'' is required<br>UDAPI1066 - The ''segment'' is invalid<br>UDAPI1073
            - Financial year should have max length of 4<br>UDAPI1106 - The page_size
            should be greater than or equal to 1<br>UDAPI1107 - The page_size should
            be less than or equal to 5000>br>UDAPI1105 - The given dates are not in
            the mentioned financial year
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTradeWiseProfitAndLossDataResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n   'https://api.upstox.com/v2/trade/profit-loss/data?segment=EQ&financial_year=2223&page_number=1&page_size=3000'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization:\
          \ Bearer access_token'"
  /v2/trade/profit-loss/charges:
    get:
      tags:
      - Trade Profit And Loss
      summary: Get profit and loss on trades
      description: This API gives the charges incurred by users for their trades
      operationId: getProfitAndLossCharges
      parameters:
      - name: from_date
        in: query
        description: Date from which data needs to be fetched. from_date and to_date
          should fall under the same financial year as mentioned in financial_year
          attribute. Date in dd-mm-yyyy format
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 01-04-2022
      - name: to_date
        in: query
        description: Date till which data needs to be fetched. from_date and to_date
          should fall under the same financial year as mentioned in financial_year
          attribute. Date in dd-mm-yyyy format
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 31-03-2023
      - name: segment
        in: query
        description: "Segment for which data is requested can be from the following\
          \ options EQ - Equity,   FO - Futures and Options,   COM  - Commodity, \
          \  CD - Currency Derivatives"
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: EQ
      - name: financial_year
        in: query
        description: "Financial year for which data has been requested. Concatenation\
          \ of last 2 digits of from year and to year Sample:for 2021-2022, financial_year\
          \ will be 2122"
        required: true
        style: form
        explode: true
        schema:
          pattern: "^(0|[1-9][0-9]*)$"
          type: string
        example: 2223
      responses:
        "400":
          description: UDAPI1067 - The ''segment'' is required<br>UDAPI1066 - The
            ''segment'' is invalid<br>UDAPI1068 - The start_date is required<br>UDAPI1069
            - The end_date is required<br>UDAPI1105 - The provided dates do not fall
            within the specified financial year
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProfitAndLossChargesResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n   'https://api.upstox.com/v2/trade/profit-loss/charges?start_date=01-04-2022&end_date=30-03-2023&segment=EQ'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization:\
          \ Bearer access_token'"
  /v2/portfolio/short-term-positions:
    get:
      tags:
      - Portfolio
      summary: Get Positions
      description: Fetches the current positions for the user for the current day.
      operationId: getPositions
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Authorization Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPositionResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n  'https://api.upstox.com/v2/portfolio/short-term-positions'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization:\
          \ Bearer access_token'"
  /v2/portfolio/long-term-holdings:
    get:
      tags:
      - Portfolio
      summary: Get Holdings
      description: Fetches the holdings which the user has bought/sold in previous
        trading sessions.
      operationId: getHoldings
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Authorization Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHoldingsResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n   'https://api.upstox.com/v2/portfolio/long-term-holdings'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization:\
          \ Bearer access_token'"
  /v2/order/trades:
    get:
      tags:
      - Order
      summary: Get trades for order
      description: Retrieve the trades executed for an order
      operationId: getTradesByOrder
      parameters:
      - name: order_id
        in: query
        description: The order ID for which the order to get order trades
        required: true
        style: form
        explode: true
        schema:
          pattern: "^[-a-zA-Z0-9]+"
          type: string
        example: 12345667890
      responses:
        "400":
          description: UDAPI1010 - Order id accepts only alphanumeric characters and
            '-'.<br>UDAPI1023 - Order id is required<br>UDAPI100010 - Unknown order
            id | order request rejected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTradeResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n   'https://api.upstox.com/v2/order/trades?order_id=order_id'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization:\
          \ Bearer access_token'"
  /v2/order/trades/get-trades-for-day:
    get:
      tags:
      - Order
      summary: Get trades
      description: Retrieve the trades executed for the day
      operationId: getTradeHistory
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTradeResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n   'https://api.upstox.com/v2/order/trades/get-trades-for-day'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization:\
          \ Bearer access_token'"
  /v2/order/retrieve-all:
    get:
      tags:
      - Order
      summary: Get order book
      description: "This API provides the list of orders placed by the user. The orders\
        \ placed by the user is transient for a day and is cleared by the end of the\
        \ trading session. This API returns all states of the orders, namely, open,\
        \ pending, and filled ones."
      operationId: getOrderBook
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderBookResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n   'https://api.upstox.com/v2/order/retrieve-all'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization:\
          \ Bearer access_token'"
  /v2/order/history:
    get:
      tags:
      - Order
      summary: Get order history
      description: |-
        This API provides the details of the particular order the user has placed. The orders placed by the user is transient for a day and are cleared by the end of the trading session. This API returns all states of the orders, namely, open, pending, and filled ones.

        The order history can be requested either using order_id or tag.

        If both the options are passed, the history of the order which precisely matches both the order_id and tag will be returned in the response.

        If only the tag is passed, the history of all the associated orders which matches the tag will be shared in the response.
      operationId: getOrderDetails
      parameters:
      - name: order_id
        in: query
        description: The order reference ID for which the order history is required
        required: false
        style: form
        explode: true
        schema:
          pattern: "^[-a-zA-Z0-9]+"
          type: string
        example: 12345667890
      - name: tag
        in: query
        description: The unique tag of the order for which the order history is being
          requested
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 2qdqjppebx
      responses:
        "400":
          description: UDAPI1010 - Order id accepts only alphanumeric characters and
            '-'<br>UDAPI1023 - Order id is required<br>UDAPI100010 - Unknown order
            id | order request rejected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n   'https://api.upstox.com/v2/order/history?order_id=order_id'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization:\
          \ Bearer access_token'"
  /v2/order/details:
    get:
      tags:
      - Order
      summary: Get order details
      description: |+
        This API provides the recent detail of the particular order the user has placed. The orders placed by the user is transient for a day and are cleared by the end of the trading session.\n\nThe order details can be requested using order_id.

      operationId: getOrderStatus
      parameters:
      - name: order_id
        in: query
        description: The order reference ID for which the order details is required
        required: false
        style: form
        explode: true
        schema:
          pattern: "^[-a-zA-Z0-9]+"
          type: string
        example: 12345667890
      responses:
        "400":
          description: UDAPI1010 - Order id accepts only alphanumeric characters and
            '-'<br>UDAPI1023 - Order id is required<br>UDAPI100010 - Unknown order
            id | order request rejected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderDetailsResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n   'https://api.upstox.com/v2/order/status?order_id=order_id'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization:\
          \ Bearer access_token'"
  /v2/option/contract:
    get:
      tags:
      - Options
      summary: Get option contracts
      description: This API provides the functionality to retrieve the option contracts
      operationId: getOptionContracts
      parameters:
      - name: instrument_key
        in: query
        description: Instrument key for an underlying symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: NSE_INDEX|Nifty 50
      - name: expiry_date
        in: query
        description: "Expiry date in format: YYYY-mm-dd"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 2024-02-01
      responses:
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOptionContractResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n  'https://api.upstox.com/v2/option/contract?instrument_key=NSE_EQ%7CINE848E01039'\
          \ \n  -H 'accept: application/json' \n  -H 'Authorization: Bearer access_token'"
  /v2/option/chain:
    get:
      tags:
      - Options
      summary: Get option chain
      description: This API provides the functionality to retrieve the option chain
      operationId: getPutCallOptionChain
      parameters:
      - name: instrument_key
        in: query
        description: Instrument key for an underlying symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: NSE_INDEX|Nifty 50
      - name: expiry_date
        in: query
        description: "Expiry date in format: YYYY-mm-dd"
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: 2024-02-01
      responses:
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOptionChainResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n  'https://api.upstox.com/v2/option/contract?instrument_key=NSE_EQ%7CINE848E01039&expiry_date=2024-01-01'\
          \ \n  -H 'accept: application/json' \n  -H 'Authorization: Bearer access_token'"
  /v2/market/timings/{date}:
    get:
      tags:
      - Market Holidays and Timings
      summary: Get Exchange Timings on particular date
      description: This API provides the functionality to retrieve the exchange timings
        on particular date
      operationId: getExchangeTimings
      parameters:
      - name: date
        in: path
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
      responses:
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExchangeTimingResponse'
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n  'https://api.upstox.com/v2/markets/timings/2024-01-01'\
          \ \n  -H 'accept: application/json'"
  /v2/market/status/{exchange}:
    get:
      tags:
      - Market Holidays and Timings
      summary: Get Market status for particular exchange
      description: This API provides the functionality to retrieve the market status
        for particular exchange
      operationId: getMarketStatus
      parameters:
      - name: exchange
        in: path
        required: true
        style: simple
        explode: false
        schema:
          pattern: ^(\s*|(?:NSE|NFO|CDS|BSE|BFO|BCD|MCX|NSCOM)+)$
          type: string
      responses:
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMarketStatusResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n  'https://api.upstox.com/v2/markets/status/NFO'\
          \ \n  -H 'accept: application/json' \n  -H 'Authorization: Bearer access_token'"
  /v2/market/holidays:
    get:
      tags:
      - Market Holidays and Timings
      summary: Get Holiday list of current year
      description: This API provides the functionality to retrieve the holiday list
        of current year
      operationId: getHolidays
      responses:
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHolidayResponse'
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n  'https://api.upstox.com/v2/markets/holidays' \n\
          \  -H 'accept: application/json' "
  /v2/market/holidays/{date}:
    get:
      tags:
      - Market Holidays and Timings
      summary: Get Holiday on particular date
      description: This API provides the functionality to retrieve the holiday on
        particular date
      operationId: getHoliday
      parameters:
      - name: date
        in: path
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
      responses:
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHolidayResponse'
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n  'https://api.upstox.com/v2/markets/holidays/2024-01-01'\
          \ \n  -H 'accept: application/json' "
  /v2/market-quote/quotes:
    get:
      tags:
      - Market Quote
      summary: Market quotes and instruments - Full market quotes
      description: This API provides the functionality to retrieve the full market
        quotes for one or more instruments.This API returns the complete market data
        snapshot of up to 500 instruments in one go.
      operationId: getFullMarketQuote
      parameters:
      - name: symbol
        in: query
        description: Comma separated list of symbols
        required: false
        deprecated: true
        style: form
        explode: true
        schema:
          type: string
        example: "NSE_EQ|INE848E01016,NSE_EQ|INE848E01039"
      - name: instrument_key
        in: query
        description: Comma separated list of instrument keys
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "NSE_EQ|INE848E01016,NSE_EQ|INE848E01039"
      responses:
        "400":
          description: UDAPI1009 - symbol is required<br>UDAPI1011 - symbol is of
            invalid format<br>UDAPI100011 - Invalid Instrument key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFullMarketQuoteResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n   'https://api.upstox.com/v2/market-quote/quotes?symbol=NSE_EQ%7CINE848E01039'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization:\
          \ Bearer access_token'"
  /v2/market-quote/ohlc:
    get:
      tags:
      - Market Quote
      summary: Market quotes and instruments - OHLC quotes
      description: This API provides the functionality to retrieve the OHLC quotes
        for one or more instruments.This API returns the OHLC snapshots of up to 1000
        instruments in one go.
      operationId: getMarketQuoteOHLC
      parameters:
      - name: symbol
        in: query
        description: Comma separated list of symbols
        required: false
        deprecated: true
        style: form
        explode: true
        schema:
          type: string
        example: "NSE_EQ|INE848E01016,NSE_EQ|INE848E01039"
      - name: instrument_key
        in: query
        description: Comma separated list of instrument keys
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "NSE_EQ|INE848E01016,NSE_EQ|INE848E01039"
      - name: interval
        in: query
        description: Interval to get ohlc data
        required: true
        style: form
        explode: true
        schema:
          pattern: ^(1d|I1|I30)$
          type: string
        example: 1d
      responses:
        "400":
          description: UDAPI1009 - symbol is required<br>UDAPI1011 - symbol is of
            invalid format<br>UDAPI1027 - interval is required<br>UDAPI1028 - Invalid
            interval<br>UDAPI100011 - Invalid Instrument key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMarketQuoteOHLCResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n  'https://api.upstox.com/v2/market-quote/ohlc?symbol=NSE_EQ%7CINE848E01039&interval=1d'\
          \ \n  -H 'accept: application/json' \n  -H 'Api-Version: 2.0' \n  -H 'Authorization:\
          \ Bearer access_token'"
  /v2/market-quote/ltp:
    get:
      tags:
      - Market Quote
      summary: Market quotes and instruments - LTP quotes.
      description: This API provides the functionality to retrieve the LTP quotes
        for one or more instruments.This API returns the LTPs of up to 1000 instruments
        in one go.
      operationId: ltp
      parameters:
      - name: symbol
        in: query
        description: Comma separated list of symbols
        required: false
        deprecated: true
        style: form
        explode: true
        schema:
          type: string
        example: "NSE_EQ|INE848E01016,NSE_EQ|INE848E01039"
      - name: instrument_key
        in: query
        description: Comma separated list of instrument keys
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "NSE_EQ|INE848E01016,NSE_EQ|INE848E01039"
      responses:
        "400":
          description: UDAPI1009 - symbol is required<br>UDAPI1011 - symbol is of
            invalid format<br>UDAPI100011 - Invalid Instrument key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMarketQuoteLastTradedPriceResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n  'https://api.upstox.com/v2/market-quote/ltp?symbol=NSE_EQ%7CINE848E01039'\
          \ \n  -H 'accept: application/json' \n  -H 'Api-Version: 2.0' \n  -H 'Authorization:\
          \ Bearer access_token'"
  /v2/login/authorization/dialog:
    get:
      tags:
      - Login
      summary: Authorize API
      description: This provides details on the login endpoint.
      operationId: authorize
      parameters:
      - name: client_id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: redirect_uri
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: state
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: scope
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "400":
          description: UDAPI1017 - API Key is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "302":
          description: Successful Operation
  /v2/historical-candle/{instrumentKey}/{interval}/{to_date}:
    get:
      tags:
      - History
      summary: Historical candle data
      description: |-
        Get OHLC values for all instruments across various timeframes. Historical data can be fetched for the following durations.
        1minute: last 1 month candles till endDate
        30minute: last 1 year candles till endDate
        day: last 1 year candles till endDate
        week: last 10 year candles till endDate
        month: last 10 year candles till endDate
      operationId: getHistoricalCandleData
      parameters:
      - name: instrumentKey
        in: path
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^(?:^NSE_EQ|NSE_FO|NCD_FO|BSE_EQ|BSE_FO|BCD_FO|MCX_FO|NSE_INDEX|BSE_INDEX|MCX_INDEX|NSE_COM)\\\
            |[\\w ]+(,(?:NSE_EQ|NSE_FO|NCD_FO|BSE_EQ|BSE_FO|BCD_FO|MCX_FO|NSE_INDEX|BSE_INDEX|MCX_INDEX|NSE_COM)\\\
            |[\\w ]+)*?$"
          type: string
      - name: interval
        in: path
        required: true
        style: simple
        explode: false
        schema:
          pattern: ^(1minute|30minute|day|week|month)$
          type: string
      - name: to_date
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "400":
          description: "UDAPI1015 - to_date must be greater than or equal to from_date\
            \ and Date should be in valid format: yyyy-mm-dd<br>UDAPI1020 - Interval\
            \ accepts one of (1minute,30minute,day,week,month)<br>UDAPI1021 - Instrument\
            \ key is of invalid format<br>UDAPI1022 - to_date is required<br>UDAPI100011\
            \ - Invalid Instrument key"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHistoricalCandleResponse'
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n   'https://api.upstox.com/v2/historical-candle/NSE_EQ%7CINE848E01016/day/2022-10-01/2022-10-04'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' "
  /v2/historical-candle/{instrumentKey}/{interval}/{to_date}/{from_date}:
    get:
      tags:
      - History
      summary: Historical candle data
      description: |-
        Get OHLC values for all instruments across various timeframes. Historical data can be fetched for the following durations.
        1minute: last 1 month candles till endDate
        30minute: last 1 year candles till endDate
        day: last 1 year candles till endDate
        week: last 10 year candles till endDate
        month: last 10 year candles till endDate
      operationId: getHistoricalCandleData_1
      parameters:
      - name: instrumentKey
        in: path
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^(?:^NSE_EQ|NSE_FO|NCD_FO|BSE_EQ|BSE_FO|BCD_FO|MCX_FO|NSE_INDEX|BSE_INDEX|MCX_INDEX|NSE_COM)\\\
            |[\\w ]+(,(?:NSE_EQ|NSE_FO|NCD_FO|BSE_EQ|BSE_FO|BCD_FO|MCX_FO|NSE_INDEX|BSE_INDEX|MCX_INDEX|NSE_COM)\\\
            |[\\w ]+)*?$"
          type: string
      - name: interval
        in: path
        required: true
        style: simple
        explode: false
        schema:
          pattern: ^(1minute|30minute|day|week|month)$
          type: string
      - name: to_date
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: from_date
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "400":
          description: "UDAPI1015 - to_date must be greater than or equal to from_date\
            \ and Date should be in valid format: yyyy-mm-dd<br>UDAPI1020 - Interval\
            \ accepts one of (1minute,30minute,day,week,month)<br>UDAPI1021 - Instrument\
            \ key is of invalid format<br>UDAPI1022 - to_date is required<br>UDAPI100011\
            \ - Invalid Instrument key"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHistoricalCandleResponse'
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n   'https://api.upstox.com/v2/historical-candle/NSE_EQ%7CINE848E01016/day/2022-10-01/2022-10-04'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' "
  /v2/historical-candle/intraday/{instrumentKey}/{interval}:
    get:
      tags:
      - History
      summary: Intra day candle data
      description: Get OHLC values for all instruments for the present trading day
      operationId: getIntraDayCandleData
      parameters:
      - name: instrumentKey
        in: path
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^(?:^NSE_EQ|NSE_FO|NCD_FO|BSE_EQ|BSE_FO|BCD_FO|MCX_FO|NSE_INDEX|BSE_INDEX|MCX_INDEX|NSE_COM)\\\
            |[\\w ]+(,(?:NSE_EQ|NSE_FO|NCD_FO|BSE_EQ|BSE_FO|BCD_FO|MCX_FO|NSE_INDEX|BSE_INDEX|MCX_INDEX|NSE_COM)\\\
            |[\\w ]+)*?$"
          type: string
      - name: interval
        in: path
        required: true
        style: simple
        explode: false
        schema:
          pattern: ^(1minute|30minute)$
          type: string
      responses:
        "400":
          description: "UDAPI1076 - Interval accepts one of (1minute,30minute)<br>UDAPI1021\
            \ - Instrument key is of invalid format<br>UDAPI100011 - Invalid Instrument\
            \ key"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIntraDayCandleResponse'
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n   'https://api.upstox.com/v2/historical-candle/intraday/NSE_EQ%7CINE848E01016/1minute'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' "
  /v2/feed/portfolio-stream-feed:
    get:
      tags:
      - Websocket
      summary: Portfolio Stream Feed
      description: This API redirects the client to the respective socket endpoint
        to receive Portfolio updates.
      operationId: getPortfolioStreamFeed
      parameters:
      - name: update_types
        in: query
        description: Identifiers separated by commas denote the types of updates to
          receive.
        required: false
        style: form
        explode: true
        schema:
          pattern: "^(?:(order|position|holding)(?:(?!.*\\1).)*(,(order|position|holding)(?:(?!.*\\\
            3).))*)?$"
          type: string
        example: "order,position,holding"
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "302":
          description: Location for authorized access of portfolio stream feed
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n   'https://api.upstox.com/v2/feed/portfolio-stream-feed'\
          \ \n -H 'accept: */*' \n -H 'Api-Version: 2.0' \n -H 'Authorization: Bearer\
          \ access_token'"
  /v2/feed/portfolio-stream-feed/authorize:
    get:
      tags:
      - Websocket
      summary: Portfolio Stream Feed Authorize
      description: ' This API provides the functionality to retrieve the socket endpoint
        URI for Portfolio updates.'
      operationId: getPortfolioStreamFeedAuthorize
      parameters:
      - name: update_types
        in: query
        description: Identifiers separated by commas denote the types of updates to
          receive.
        required: false
        style: form
        explode: true
        schema:
          pattern: "^(?:(order|position|holding)(?:(?!.*\\1).)*(,(order|position|holding)(?:(?!.*\\\
            3).))*)?$"
          type: string
        example: "order,position,holding"
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebsocketAuthRedirectResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n   'https://api.upstox.com/v2/feed/portfolio-stream-feed/authorize'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization:\
          \ Bearer access_token'"
  /v2/feed/market-data-feed:
    get:
      tags:
      - Websocket
      summary: Market Data Feed
      description: ' This API redirects the client to the respective socket endpoint
        to receive Market updates.'
      operationId: getMarketDataFeed
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "302":
          description: Location for authorized access of market data feed
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n   'https://api.upstox.com/v2/feed/market-data-feed'\
          \ \n -H 'accept: */*' \n -H 'Api-Version: 2.0' \n -H 'Authorization: Bearer\
          \ access_token'"
  /v2/feed/market-data-feed/authorize:
    get:
      tags:
      - Websocket
      summary: Market Data Feed Authorize
      description: This API provides the functionality to retrieve the socket endpoint
        URI for Market updates.
      operationId: getMarketDataFeedAuthorize
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebsocketAuthRedirectResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n   'https://api.upstox.com/v2/feed/market-data-feed/authorize'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization:\
          \ Bearer access_token'"
  /v2/charges/historical-trades:
    get:
      tags:
      - Post Trade
      summary: Get historical trades
      description: This API retrieves the trade history for a specified time interval.
      operationId: getTradesByDateRange
      parameters:
      - name: segment
        in: query
        description: "Segment for which data is requested can be from the following\
          \ options EQ - Equity,   FO - Futures and Options,   COM  - Commodity, \
          \  CD - Currency Derivatives MF - Mutual Funds"
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ""
        example: EQ
      - name: start_date
        in: query
        description: Date from which trade history needs to be fetched. Date in YYYY-mm-dd
          format
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: 2022-04-01
      - name: end_date
        in: query
        description: Date till which history needs needs to be fetched. Date in YYYY-mm-dd
          format
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: 2023-03-31
      - name: page_number
        in: query
        description: 'Page number for which you want to fetch trade history '
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 1
      - name: page_size
        in: query
        description: 'How many records you want for a page '
        required: true
        style: form
        explode: true
        schema:
          maximum: 5000
          minimum: 1
          type: integer
          format: int32
        example: 100
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TradeHistoryResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n   'https://api.upstox.com/v2/charges/historical-trades?segment=EQ&start_date=2024-04-01&end_date=2024-08-29&page_number=1&page_size=100'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization:\
          \ Bearer access_token'"
  /v2/charges/brokerage:
    get:
      tags:
      - Charge
      summary: Brokerage details
      description: Compute Brokerage Charges
      operationId: getBrokerage
      parameters:
      - name: instrument_token
        in: query
        description: Key of the instrument
        required: true
        style: form
        explode: true
        schema:
          pattern: "^(?:^NSE_EQ|NSE_FO|NCD_FO|BSE_EQ|BSE_FO|BCD_FO|MCX_FO|NSE_INDEX|BSE_INDEX|MCX_INDEX|NSE_COM)\\\
            |[\\w ]+(,(?:NSE_EQ|NSE_FO|NCD_FO|BSE_EQ|BSE_FO|BCD_FO|MCX_FO|NSE_INDEX|BSE_INDEX|MCX_INDEX|NSE_COM)\\\
            |[\\w ]+)*?$"
          type: string
        example: NSE_EQ|INE848E01016
      - name: quantity
        in: query
        description: Quantity with which the order is to be placed
        required: true
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: product
        in: query
        description: Product with which the order is to be placed
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: I
      - name: transaction_type
        in: query
        description: Indicates whether its a BUY or SELL order
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: BUY
      - name: price
        in: query
        description: Price with which the order is to be placed
        required: true
        style: form
        explode: true
        schema:
          minimum: 0
          type: number
          format: float
        example: 123.1
      responses:
        "400":
          description: UDAPI1060 - The quantity is required<br>UDAPI1061 - The price
            is required<br>UDAPI1062 - The transaction_type is required<br> UDAPI1063
            - The product is required<br> UDAPI1064 - The quantity cannot be zero<br>UDAPI1065
            - The price cannot be zero<br>UDAPI1059 - The instrument_token is of invalid
            format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBrokerageResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'GET' \n   'https://api.upstox.com/v2/charges/brokerage?instrument_token=NSE_EQ%7CINE848E01039&quantity=10&product=MIS&transaction_type=Buy&price=16.20'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization:\
          \ Bearer access_token'"
  /v2/order/multi/cancel:
    delete:
      tags:
      - Order
      summary: Cancel multi order
      description: API to cancel all the open or pending orders which can be applied
        to both AMO and regular orders.
      operationId: cancelMultiOrder
      parameters:
      - name: tag
        in: query
        description: The tag associated with the orders for which the orders must
          be cancelled
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: segment
        in: query
        description: The segment for which the orders must be cancelled
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "400":
          description: UDAPI1105 - Invalid segment<br>UDAPI1108 - No open or pending
            order available<br>UDAPI1109 - Available open or pending orders should
            not be more than limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelOrExitMultiOrderResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'DELETE' \n   'https://api.upstox.com/v2/order/multi/cancel?tag=xyz&segment=NSE_FO'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization:\
          \ Bearer access_token'"
  /v2/order/cancel:
    delete:
      tags:
      - Order
      summary: Cancel order
      description: |-
        Cancel order API can be used for two purposes:
        Cancelling an open order which could be an AMO or a normal order
        It is also used to EXIT a CO or OCO(bracket order)
      operationId: cancelOrder
      parameters:
      - name: order_id
        in: query
        description: The order ID for which the order must be cancelled
        required: true
        style: form
        explode: true
        schema:
          pattern: "^[-a-zA-Z0-9]+"
          type: string
        example: 12345667890
      responses:
        "400":
          description: UDAPI1010 - Order id accepts only alphanumeric characters and
            '-'.<br>UDAPI1023 - Order id is required<br>UDAPI100010 - Unknown order
            id | order request rejected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelOrderResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'DELETE' \n   'https://api.upstox.com/v2/order/cancel?order_id=order_id'\
          \ \n -H 'accept: application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization:\
          \ Bearer access_token'"
  /v2/logout:
    delete:
      tags:
      - Login
      summary: Logout
      description: Logout
      operationId: logout
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "429":
          description: Too Many Requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "401":
          description: Authorization Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthClientException'
        "423":
          description: Locked
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiGatewayErrorResponse'
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutResponse'
      security:
      - OAUTH2: []
      x-codeSamples:
      - lang: curl
        source: "curl -X 'DELETE' \n 'https://api.upstox.com/v2/logout' \n -H 'accept:\
          \ application/json' \n -H 'Api-Version: 2.0' \n -H 'Authorization: Bearer\
          \ access_token'"
components:
  schemas:
    ApiGatewayErrorResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
    Problem:
      type: object
      properties:
        errorCode:
          type: string
          description: Unique code for the error state
          deprecated: true
        message:
          type: string
          description: Verbose message for the error state
        propertyPath:
          type: string
          description: Path to property failing validation
          deprecated: true
        invalidValue:
          type: object
          description: Invalid value for the property failing validation
          deprecated: true
        error_code:
          type: string
        property_path:
          type: string
        invalid_value:
          type: object
    ConvertPositionRequest:
      required:
      - instrument_token
      - new_product
      - old_product
      - quantity
      - transaction_type
      type: object
      properties:
        instrument_token:
          type: string
          description: Key of the instrument
          example: "151064324"
        new_product:
          type: string
          description: Indicates the new product to use for the convert positions
          example: D
          enum:
          - I
          - D
          - CO
          - OCO
          - MTF
        old_product:
          type: string
          description: Indicates the old product to use for the convert positions
          example: I
          enum:
          - I
          - D
          - CO
          - OCO
          - MTF
        transaction_type:
          type: string
          description: Indicates whether its a buy(b) or sell(s) order
          example: BUY
          enum:
          - BUY
          - SELL
        quantity:
          type: integer
          description: Quantity with which the position to convert
          format: int32
          example: 1
    ConvertPositionData:
      type: object
      properties:
        status:
          type: string
          description: Status message for convert position request
          readOnly: true
          example: complete
      description: Response data for convert position request
      example:
        status: complete
    ConvertPositionResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          $ref: '#/components/schemas/ConvertPositionData'
      example:
        data:
          status: complete
        status: success
    ModifyOrderRequest:
      required:
      - order_id
      - order_type
      - price
      - trigger_price
      - validity
      type: object
      properties:
        quantity:
          type: integer
          description: Quantity with which the order was placed
          format: int32
          example: 1
        validity:
          type: string
          description: Order validity (DAY- Day and IOC- Immediate or Cancel (IOC)
            order)
          example: DAY
          enum:
          - DAY
          - IOC
        price:
          type: number
          description: Price at which the order was placed
          format: float
          example: 120.01
        order_id:
          type: string
          description: The order ID for which the order must be modified
          example: "1644490272000"
        order_type:
          type: string
          description: |-
            Type of order. It can be one of the following
            MARKET refers to market order
            LIMILT refers to Limit Order
            SL refers to Stop Loss Limit
            SL-M refers to Stop Loss Market
          example: MARKET
          enum:
          - MARKET
          - LIMIT
          - SL
          - SL-M
        disclosed_quantity:
          type: integer
          description: The quantity that should be disclosed in the market depth
          format: int32
          example: 0
        trigger_price:
          type: number
          description: If the order is a stop loss order then the trigger price to
            be set is mentioned here
          format: float
          example: 0
    ModifyOrderData:
      type: object
      properties:
        order_id:
          type: string
          description: Order ID
          readOnly: true
          example: "1644490272000"
      description: Response data for modify order request
      example:
        order_id: "1644490272000"
    ModifyOrderResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          $ref: '#/components/schemas/ModifyOrderData'
      example:
        data:
          order_id: "1644490272000"
        status: success
    BatchExecutionSummary:
      type: object
      properties:
        total:
          type: integer
          description: The total number of order lines present in the payload.
          format: int32
          readOnly: true
          example: 3
        success:
          type: integer
          description: The number of order lines that were successfully placed without
            any errors.
          format: int32
          readOnly: true
          example: 2
        error:
          type: integer
          description: "The number of order lines that encountered errors during processing,\
            \ despite their payloads being valid."
          format: int32
          readOnly: true
          example: 1
      description: Execution summary for cancel or exit order request
      example:
        total: 3
        success: 2
        error: 1
    CancelOrExitMultiOrderData:
      type: object
      properties:
        order_ids:
          type: array
          description: Reference order IDs
          readOnly: true
          example: "['1644490272000']"
          items:
            type: string
            description: Reference order IDs
            readOnly: true
            example: "['1644490272000']"
      description: Response data for cancel or exit order request
      example:
        order_ids: "['1644490272000']"
    CancelOrExitMultiOrderResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          $ref: '#/components/schemas/CancelOrExitMultiOrderData'
        errors:
          type: array
          description: Error data for cancel or exit order request
          items:
            $ref: '#/components/schemas/CancelOrExitOrderErrorData'
        summary:
          $ref: '#/components/schemas/BatchExecutionSummary'
      example:
        summary:
          total: 3
          success: 2
          error: 1
        data:
          order_ids: "['1644490272000']"
        errors:
        - instrument_key: NSE_EQ|INE002A01018
          property_path: property_path
          errorCode: errorCode
          error_code: error_code
          invalid_value: {}
          message: message
          propertyPath: propertyPath
          order_id: "1644490272000"
          invalidValue: {}
        - instrument_key: NSE_EQ|INE002A01018
          property_path: property_path
          errorCode: errorCode
          error_code: error_code
          invalid_value: {}
          message: message
          propertyPath: propertyPath
          order_id: "1644490272000"
          invalidValue: {}
        status: success
    CancelOrExitOrderErrorData:
      type: object
      properties:
        errorCode:
          type: string
          description: Unique code for the error state
          deprecated: true
        message:
          type: string
          description: Verbose message for the error state
        propertyPath:
          type: string
          description: Path to property failing validation
          deprecated: true
        invalidValue:
          type: object
          description: Invalid value for the property failing validation
          deprecated: true
        error_code:
          type: string
        property_path:
          type: string
        invalid_value:
          type: object
        instrument_key:
          type: string
          description: Key of instrument
          readOnly: true
          example: NSE_EQ|INE002A01018
        order_id:
          type: string
          description: Reference order ID
          readOnly: true
          example: "1644490272000"
      description: Error data for cancel or exit order request
      example:
        instrument_key: NSE_EQ|INE002A01018
        property_path: property_path
        errorCode: errorCode
        error_code: error_code
        invalid_value: {}
        message: message
        propertyPath: propertyPath
        order_id: "1644490272000"
        invalidValue: {}
    PlaceOrderRequest:
      required:
      - disclosed_quantity
      - instrument_token
      - is_amo
      - order_type
      - price
      - product
      - quantity
      - transaction_type
      - trigger_price
      - validity
      type: object
      properties:
        quantity:
          type: integer
          description: Quantity with which the order is to be placed
          format: int32
          example: 1
        product:
          type: string
          description: "Signifies if the order was either Intraday, Delivery, CO or\
            \ OCO"
          example: D
          enum:
          - I
          - D
        validity:
          type: string
          description: "It can be one of the following - DAY(default), IOC"
          example: DAY
          enum:
          - DAY
          - IOC
        price:
          type: number
          description: Price at which the order will be placed
          format: float
          example: 0
        tag:
          type: string
          description: Tag for a particular order
        instrument_token:
          type: string
          description: Key of the instrument
          example: NSE_EQ|INE848E01016
        order_type:
          type: string
          description: |-
            Type of order. It can be one of the following
            MARKET refers to market order
            LIMIT refers to Limit Order
            SL refers to Stop Loss Limit
            SL-M refers to Stop Loss Market
          example: MARKET
          enum:
          - MARKET
          - LIMIT
          - SL
          - SL-M
        transaction_type:
          type: string
          description: Indicates whether its a buy or sell order
          example: BUY
          enum:
          - BUY
          - SELL
        disclosed_quantity:
          type: integer
          description: The quantity that should be disclosed in the market depth
          format: int32
          example: 0
        trigger_price:
          type: number
          description: If the order is a stop loss order then the trigger price to
            be set is mentioned here
          format: float
          example: 0
        is_amo:
          type: boolean
          description: Signifies if the order is an After Market Order
          example: false
    PlaceOrderData:
      type: object
      properties:
        order_id:
          type: string
          description: An order ID for the order request placed
          readOnly: true
          example: "1644490272000"
      description: Response data for place order request
      example:
        order_id: "1644490272000"
    PlaceOrderResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          $ref: '#/components/schemas/PlaceOrderData'
      example:
        data:
          order_id: "1644490272000"
        status: success
    MultiOrderRequest:
      required:
      - correlation_id
      - disclosed_quantity
      - instrument_token
      - is_amo
      - order_type
      - price
      - product
      - quantity
      - slice
      - transaction_type
      - trigger_price
      - validity
      type: object
      properties:
        quantity:
          type: integer
          description: Quantity with which the order is to be placed
          format: int32
          example: 1
        product:
          type: string
          description: "Signifies if the order was either Intraday, Delivery, CO or\
            \ OCO"
          example: D
          enum:
          - I
          - D
        validity:
          type: string
          description: "It can be one of the following - DAY(default), IOC"
          example: DAY
          enum:
          - DAY
          - IOC
        price:
          type: number
          description: Price at which the order will be placed
          format: float
          example: 0
        tag:
          maxLength: 40
          minLength: 0
          type: string
        slice:
          type: boolean
          description: To divide the order line based on predefined exchange definitions
          example: false
        instrument_token:
          type: string
          description: Key of the instrument
          example: NSE_EQ|INE848E01016
        order_type:
          type: string
          description: |-
            Type of order. It can be one of the following
            MARKET refers to market order
            LIMIT refers to Limit Order
            SL refers to Stop Loss Limit
            SL-M refers to Stop Loss Market
          example: MARKET
          enum:
          - MARKET
          - LIMIT
          - SL
          - SL-M
        transaction_type:
          type: string
          description: Indicates whether its a buy or sell order
          example: BUY
          enum:
          - BUY
          - SELL
        disclosed_quantity:
          type: integer
          description: The quantity that should be disclosed in the market depth
          format: int32
          example: 0
        trigger_price:
          type: number
          description: If the order is a stop loss order then the trigger price to
            be set is mentioned here
          format: float
          example: 0
        is_amo:
          type: boolean
          description: Signifies if the order is an After Market Order
          example: false
        correlation_id:
          maxLength: 20
          minLength: 1
          type: string
          description: A unique identifier for tracking individual orders within the
            batch
          example: "12345678"
    MultiOrderData:
      type: object
      properties:
        correlation_id:
          type: string
          description: A unique identifier for tracking individual orders within the
            batch
          readOnly: true
          example: 213fsf2324
        order_id:
          type: string
          description: An order ID for the order request placed
          readOnly: true
          example: "1644490272000"
      description: Response data for multi order request
      example:
        correlation_id: 213fsf2324
        order_id: "1644490272000"
    MultiOrderError:
      type: object
      properties:
        errorCode:
          type: string
          description: Unique code for the error state
          deprecated: true
        message:
          type: string
          description: Verbose message for the error state
        propertyPath:
          type: string
          description: Path to property failing validation
          deprecated: true
        invalidValue:
          type: object
          description: Invalid value for the property failing validation
          deprecated: true
        error_code:
          type: string
        property_path:
          type: string
        invalid_value:
          type: object
        correlation_id:
          type: string
          description: A unique identifier for tracking individual orders within the
            batch
          readOnly: true
          example: 213fsf2324
      description: Error details for multi order request
      example:
        property_path: property_path
        errorCode: errorCode
        correlation_id: 213fsf2324
        error_code: error_code
        invalid_value: {}
        message: message
        propertyPath: propertyPath
        invalidValue: {}
    MultiOrderResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          type: array
          description: Response data for multi order request
          items:
            $ref: '#/components/schemas/MultiOrderData'
        errors:
          type: array
          description: Error details for multi order request
          items:
            $ref: '#/components/schemas/MultiOrderError'
        summary:
          $ref: '#/components/schemas/MultiOrderSummary'
      example:
        summary:
          total: 3
          payload_error: 0
          success: 2
          error: 1
        data:
        - correlation_id: 213fsf2324
          order_id: "1644490272000"
        - correlation_id: 213fsf2324
          order_id: "1644490272000"
        errors:
        - property_path: property_path
          errorCode: errorCode
          correlation_id: 213fsf2324
          error_code: error_code
          invalid_value: {}
          message: message
          propertyPath: propertyPath
          invalidValue: {}
        - property_path: property_path
          errorCode: errorCode
          correlation_id: 213fsf2324
          error_code: error_code
          invalid_value: {}
          message: message
          propertyPath: propertyPath
          invalidValue: {}
        status: success
    MultiOrderSummary:
      type: object
      properties:
        total:
          type: integer
          description: The total number of order lines present in the payload.
          format: int32
          readOnly: true
          example: 3
        success:
          type: integer
          description: The number of order lines that were successfully placed without
            any errors.
          format: int32
          readOnly: true
          example: 2
        error:
          type: integer
          description: "The number of order lines that encountered errors during processing,\
            \ despite their payloads being valid."
          format: int32
          readOnly: true
          example: 1
        payload_error:
          type: integer
          description: "The number of order lines with payload errors, indicating\
            \ formatting or data validity issues.<br/><br/><b>Note</b>: Orders are\
            \ processed only if the entire batch is free of payload_error, ensuring\
            \ error-free transactions."
          format: int32
          readOnly: true
          example: 0
      description: Execution summary for multi order request
      example:
        total: 3
        payload_error: 0
        success: 2
        error: 1
    TokenRequest:
      required:
      - client_id
      - client_secret
      - code
      - grant_type
      - redirect_uri
      type: object
      properties:
        code:
          type: string
        client_id:
          type: string
          description: OAuth API key that is a public identifier for app
        client_secret:
          type: string
          description: OAuth client secret that is a private secret known only to
            app and authorization server
        redirect_uri:
          type: string
          description: Authorization server will redirect the user back to the application
            via redirect url
        grant_type:
          type: string
          description: Type of grant used to get an access token
    TokenResponse:
      type: object
      properties:
        email:
          type: string
          description: E-mail address of the user
          readOnly: true
          example: client@email.com
        exchanges:
          type: array
          description: Lists the exchanges to which the user has access
          readOnly: true
          example: NSE
          items:
            type: string
            description: Lists the exchanges to which the user has access
            readOnly: true
            example: NSE
            enum:
            - NSE
            - NFO
            - CDS
            - BSE
            - BFO
            - BCD
            - MCX
            - NSCOM
        products:
          type: array
          description: Lists the products types to which the user has access
          readOnly: true
          example: D
          items:
            type: string
            description: Lists the products types to which the user has access
            readOnly: true
            example: D
            enum:
            - I
            - D
            - CO
            - OCO
            - MTF
        broker:
          type: string
          description: The broker ID
          readOnly: true
          example: UPSTOX
        user_id:
          type: string
          description: Uniquely identifies the user
          readOnly: true
          example: "202251"
        user_name:
          type: string
          description: Name of the user
          readOnly: true
          example: client
        order_types:
          type: array
          description: Order types enabled for the user
          readOnly: true
          example: LIMIT
          items:
            type: string
            description: Order types enabled for the user
            readOnly: true
            example: LIMIT
            enum:
            - MARKET
            - LIMIT
            - SL
            - SL-M
        user_type:
          type: string
          description: "\t\nIdentifies the user's registered role at the broker. This\
            \ will be individual for all retail users"
          readOnly: true
          example: individual
        poa:
          type: boolean
          description: "\t\nTo depict if the user has given power of attorney for\
            \ transactions"
          readOnly: true
          example: true
        ddpi:
          type: boolean
          description: "\t\nIndicates if DDPI is enabled for trading"
          readOnly: true
          example: true
        is_active:
          type: boolean
          description: "\t\nWhether the status of account is active or not"
          readOnly: true
          example: true
        access_token:
          type: string
          description: The authentication token that is to used with every subsequent
            API requests
          readOnly: true
        extended_token:
          type: string
          description: "An extended authentication token with a prolonged validity\
            \ period, intended for specific API requests. Ensure you use this token\
            \ only with the designated set of APIs."
          readOnly: true
      example:
        poa: true
        is_active: true
        user_name: client
        order_types: LIMIT
        exchanges: NSE
        broker: UPSTOX
        products: D
        access_token: access_token
        user_type: individual
        extended_token: extended_token
        user_id: "202251"
        ddpi: true
        email: client@email.com
    Instrument:
      required:
      - instrument_key
      - product
      - quantity
      - transaction_type
      type: object
      properties:
        instrument_key:
          pattern: "^(?:^NSE_EQ|NSE_FO|NCD_FO|BSE_EQ|BSE_FO|BCD_FO|MCX_FO|NSE_INDEX|BSE_INDEX|MCX_INDEX|NSE_COM)\\\
            |[\\w ]+(,(?:NSE_EQ|NSE_FO|NCD_FO|BSE_EQ|BSE_FO|BCD_FO|MCX_FO|NSE_INDEX|BSE_INDEX|MCX_INDEX|NSE_COM)\\\
            |[\\w ]+)*?$"
          type: string
          description: Instrument Key of the Instrument
          example: NSE_EQ|INE848E01016
        quantity:
          minimum: 1
          type: integer
          description: Quantity of the instrument to buy or sell for margin calculation
          format: int32
          example: 1
        product:
          type: string
          description: Product with which the order is to be placed
          example: D
        transaction_type:
          type: string
          description: Indicates whether its a BUY or SELL order
          example: BUY
        price:
          minimum: 0
          type: number
          description: price
          format: double
          example: 123.9
      description: instruments
      example:
      - instrument_key: NSE_EQ|INE669E01016
        quantity: 2
        transaction_type: BUY
        product: D
      - instrument_key: NSE_EQ|INE848E01016
        quantity: 5
        transaction_type: BUY
        product: D
    MarginRequest:
      required:
      - instruments
      type: object
      properties:
        instruments:
          type: array
          description: instruments
          example:
          - instrument_key: NSE_EQ|INE669E01016
            quantity: 2
            transaction_type: BUY
            product: D
          - instrument_key: NSE_EQ|INE848E01016
            quantity: 5
            transaction_type: BUY
            product: D
          items:
            $ref: '#/components/schemas/Instrument'
    Margin:
      type: object
      properties:
        span_margin:
          type: number
          description: Upfront margin mandatory by exchange for derivatives trade
            applicable on only FNO trade
          format: double
          readOnly: true
        exposure_margin:
          type: number
          description: "Based on ELM percentage values provided by exchange, applicable\
            \ on only FNO trade"
          format: double
          readOnly: true
        equity_margin:
          type: number
          description: Margin applicable for any equity trade
          format: double
          readOnly: true
        net_buy_premium:
          type: number
          description: Option premium required.
          format: double
          readOnly: true
        additional_margin:
          type: number
          description: Application margin applicable on MCX FNO trade for certain
            commodities
          format: double
          readOnly: true
        total_margin:
          type: number
          description: Total margin required for the basket
          format: double
          readOnly: true
        tender_margin:
          type: number
          description: Tender margin
          format: double
          readOnly: true
      description: Response data for instrument margin details
      readOnly: true
      example:
        total_margin: 2.3021358869347655
        net_buy_premium: 5.962133916683182
        additional_margin: 5.637376656633329
        equity_margin: 1.4658129805029452
        tender_margin: 7.061401241503109
        span_margin: 0.8008281904610115
        exposure_margin: 6.027456183070403
    MarginData:
      type: object
      properties:
        margins:
          type: array
          description: Response data for instrument margin details
          readOnly: true
          items:
            $ref: '#/components/schemas/Margin'
        required_margin:
          type: number
          description: Total margin required to execute the orders
          format: double
          readOnly: true
        final_margin:
          type: number
          description: Total margin after margin benefit
          format: double
          readOnly: true
      description: Response data for margin
      example:
        margins:
        - total_margin: 2.3021358869347655
          net_buy_premium: 5.962133916683182
          additional_margin: 5.637376656633329
          equity_margin: 1.4658129805029452
          tender_margin: 7.061401241503109
          span_margin: 0.8008281904610115
          exposure_margin: 6.027456183070403
        - total_margin: 2.3021358869347655
          net_buy_premium: 5.962133916683182
          additional_margin: 5.637376656633329
          equity_margin: 1.4658129805029452
          tender_margin: 7.061401241503109
          span_margin: 0.8008281904610115
          exposure_margin: 6.027456183070403
        required_margin: 9.301444243932576
        final_margin: 3.616076749251911
    PostMarginResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          $ref: '#/components/schemas/MarginData'
      example:
        data:
          margins:
          - total_margin: 2.3021358869347655
            net_buy_premium: 5.962133916683182
            additional_margin: 5.637376656633329
            equity_margin: 1.4658129805029452
            tender_margin: 7.061401241503109
            span_margin: 0.8008281904610115
            exposure_margin: 6.027456183070403
          - total_margin: 2.3021358869347655
            net_buy_premium: 5.962133916683182
            additional_margin: 5.637376656633329
            equity_margin: 1.4658129805029452
            tender_margin: 7.061401241503109
            span_margin: 0.8008281904610115
            exposure_margin: 6.027456183070403
          required_margin: 9.301444243932576
          final_margin: 3.616076749251911
        status: success
    GetProfileResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          $ref: '#/components/schemas/ProfileData'
      example:
        data:
          user_type: individual
          poa: true
          is_active: true
          user_id: "202251"
          user_name: client
          order_types: LIMIT
          ddpi: true
          exchanges: NSE
          broker: UPSTOX
          email: client@email.com
          products: D
        status: success
    ProfileData:
      type: object
      properties:
        email:
          type: string
          description: E-mail address of the user
          readOnly: true
          example: client@email.com
        exchanges:
          type: array
          description: Lists the exchanges to which the user has access
          readOnly: true
          example: NSE
          items:
            type: string
            description: Lists the exchanges to which the user has access
            readOnly: true
            example: NSE
            enum:
            - NSE
            - NFO
            - CDS
            - BSE
            - BFO
            - BCD
            - MCX
            - NSCOM
        products:
          type: array
          description: Lists the products types to which the user has access
          readOnly: true
          example: D
          items:
            type: string
            description: Lists the products types to which the user has access
            readOnly: true
            example: D
            enum:
            - I
            - D
            - CO
            - OCO
            - MTF
        broker:
          type: string
          description: The broker ID
          readOnly: true
          example: UPSTOX
        user_id:
          type: string
          description: Uniquely identifies the user
          readOnly: true
          example: "202251"
        user_name:
          type: string
          description: Name of the user
          readOnly: true
          example: client
        order_types:
          type: array
          description: Order types enabled for the user
          readOnly: true
          example: LIMIT
          items:
            type: string
            description: Order types enabled for the user
            readOnly: true
            example: LIMIT
            enum:
            - MARKET
            - LIMIT
            - SL
            - SL-M
        user_type:
          type: string
          description: "\t\nIdentifies the user's registered role at the broker. This\
            \ will be individual for all retail users"
          readOnly: true
          example: individual
        poa:
          type: boolean
          description: "\t\nTo depict if the user has given power of attorney for\
            \ transactions"
          readOnly: true
          example: true
        ddpi:
          type: boolean
          description: "\t\nIndicates if DDPI is enabled for trading"
          readOnly: true
          example: true
        is_active:
          type: boolean
          description: "\t\nWhether the status of account is active or not"
          readOnly: true
          example: true
      description: Response data for user profile
      example:
        user_type: individual
        poa: true
        is_active: true
        user_id: "202251"
        user_name: client
        order_types: LIMIT
        ddpi: true
        exchanges: NSE
        broker: UPSTOX
        email: client@email.com
        products: D
    GetUserFundMarginResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserFundMarginData'
          description: Response data for Balance
      example:
        data:
          key:
            notional_cash: 0
            available_margin: 200.0
            used_margin: 120.01
            payin_amount: 0
            span_margin: 0
            adhoc_margin: 0
            exposure_margin: 0
        status: success
    UserFundMarginData:
      type: object
      properties:
        used_margin:
          type: number
          description: "Positive values denote the amount blocked into an Open order\
            \ or position. \nNegative value denotes the amount being released."
          format: float
          readOnly: true
          example: 120.01
        payin_amount:
          type: number
          description: Instant payin will reflect here
          format: float
          readOnly: true
          example: 0
        span_margin:
          type: number
          description: Amount blocked on futures and options towards SPAN
          format: float
          readOnly: true
          example: 0
        adhoc_margin:
          type: number
          description: Payin amount credited through a manual process
          format: float
          readOnly: true
          example: 0
        notional_cash:
          type: number
          description: The amount maintained for withdrawal
          format: float
          readOnly: true
          example: 0
        available_margin:
          type: number
          description: Total margin available for trading
          format: float
          readOnly: true
          example: 200.0
        exposure_margin:
          type: number
          description: Amount blocked on futures and options towards Exposure
          format: float
          readOnly: true
          example: 0
      description: Response data for Balance
      example:
        notional_cash: 0
        available_margin: 200.0
        used_margin: 120.01
        payin_amount: 0
        span_margin: 0
        adhoc_margin: 0
        exposure_margin: 0
    GetTradeWiseProfitAndLossMetaDataResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          $ref: '#/components/schemas/TradeWiseMetaData'
      example:
        data:
          trades_count: 10
          page_size_limit: 5000
        status: success
    TradeWiseMetaData:
      type: object
      properties:
        trades_count:
          type: integer
          description: Total count of trades in the trade wise P and L report
          format: int32
          readOnly: true
          example: 10
        page_size_limit:
          type: integer
          description: Maximum number of trades in a page of the trade wise P and
            L report API
          format: int32
          readOnly: true
          example: 5000
      description: Response data for brokerage
      example:
        trades_count: 10
        page_size_limit: 5000
    GetTradeWiseProfitAndLossDataResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          type: array
          description: Response data for trade wise data details
          items:
            $ref: '#/components/schemas/TradeWiseProfitAndLossData'
        metadata:
          $ref: '#/components/schemas/ProfitAndLossMetaDataWrapper'
      example:
        metadata:
          page:
            page_number: 1
            page_size: 2
        data:
        - sell_date: 14-09-2021
          quantity: 100
          buy_average: 12345.67
          scrip_name: ZEE ENTER
          buy_date: 14-09-2021
          sell_amount: 12345.67
          trade_type: EQ
          buy_amount: 12345.67
          isin: INE256A01028
          sell_average: 12345.67
        - sell_date: 14-09-2021
          quantity: 100
          buy_average: 12345.67
          scrip_name: ZEE ENTER
          buy_date: 14-09-2021
          sell_amount: 12345.67
          trade_type: EQ
          buy_amount: 12345.67
          isin: INE256A01028
          sell_average: 12345.67
        status: success
    ProfitAndLossMetaData:
      type: object
      properties:
        page_number:
          type: integer
          description: pageNumber for pagination
          format: int32
          readOnly: true
          example: 1
        page_size:
          type: integer
          description: Page size
          format: int32
          readOnly: true
          example: 2
      description: Meta data for trade wise data details
      example:
        page_number: 1
        page_size: 2
    ProfitAndLossMetaDataWrapper:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ProfitAndLossMetaData'
      example:
        page:
          page_number: 1
          page_size: 2
    TradeWiseProfitAndLossData:
      type: object
      properties:
        quantity:
          type: number
          description: The quantity of stock traded
          format: float
          readOnly: true
          example: 100
        isin:
          type: string
          description: ISIN of the stock
          readOnly: true
          example: INE256A01028
        scrip_name:
          type: string
          description: Name of the scrip traded
          readOnly: true
          example: ZEE ENTER
        trade_type:
          type: string
          description: "FUT - Futures\n\r\nOPT - Options\r\n\r\nEQ - Equity"
          readOnly: true
          example: EQ
        buy_date:
          type: string
          description: The date on which the stock was bought
          readOnly: true
          example: 14-09-2021
        buy_average:
          type: number
          description: The average rate at which each quantity of the stock was bought
          format: float
          readOnly: true
          example: 12345.67
        sell_date:
          type: string
          description: The date on which the stock was sold
          readOnly: true
          example: 14-09-2021
        sell_average:
          type: number
          description: The average rate at which each quantity of the stock was sold
          format: float
          readOnly: true
          example: 12345.67
        buy_amount:
          type: number
          description: Total buy amount
          format: float
          readOnly: true
          example: 12345.67
        sell_amount:
          type: number
          description: Total sell amount
          format: float
          readOnly: true
          example: 12345.67
      description: Response data for trade wise data details
      example:
        sell_date: 14-09-2021
        quantity: 100
        buy_average: 12345.67
        scrip_name: ZEE ENTER
        buy_date: 14-09-2021
        sell_amount: 12345.67
        trade_type: EQ
        buy_amount: 12345.67
        isin: INE256A01028
        sell_average: 12345.67
    GetProfitAndLossChargesResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          $ref: '#/components/schemas/ProfitAndLossChargesWrapperData'
      example:
        data:
          charges_breakdown:
            brokerage: 432.1
            total: 123.1
            charges:
              ipft: 2.302136
              demat_transaction: 3.6160767
              sebi_turnover: 9.301444
              transaction: 5.962134
              clearing: 5.637377
              others: 7.0614014
            taxes:
              stamp_duty: 1.4658129
              stt: 6.0274563
              gst: 0.8008282
        status: success
    ProfitAndLossChargesData:
      type: object
      properties:
        total:
          type: number
          description: '  Total charges for the user'
          format: float
          readOnly: true
          example: 123.1
        brokerage:
          type: number
          description: Brokerage charges for the order
          format: float
          readOnly: true
          example: 432.1
        taxes:
          $ref: '#/components/schemas/ProfitAndLossChargesTaxes'
        charges:
          $ref: '#/components/schemas/ProfitAndLossOtherChargesTaxes'
      description: Response data for charges details
      example:
        brokerage: 432.1
        total: 123.1
        charges:
          ipft: 2.302136
          demat_transaction: 3.6160767
          sebi_turnover: 9.301444
          transaction: 5.962134
          clearing: 5.637377
          others: 7.0614014
        taxes:
          stamp_duty: 1.4658129
          stt: 6.0274563
          gst: 0.8008282
    ProfitAndLossChargesTaxes:
      type: object
      properties:
        gst:
          type: number
          description: GST charges
          format: float
        stt:
          type: number
          description: STT charges
          format: float
        stamp_duty:
          type: number
          description: Stamp duty charges
          format: float
      description: Taxes levied on order
      readOnly: true
      example:
        stamp_duty: 1.4658129
        stt: 6.0274563
        gst: 0.8008282
    ProfitAndLossChargesWrapperData:
      type: object
      properties:
        charges_breakdown:
          $ref: '#/components/schemas/ProfitAndLossChargesData'
      description: Response data for brokerage
      example:
        charges_breakdown:
          brokerage: 432.1
          total: 123.1
          charges:
            ipft: 2.302136
            demat_transaction: 3.6160767
            sebi_turnover: 9.301444
            transaction: 5.962134
            clearing: 5.637377
            others: 7.0614014
          taxes:
            stamp_duty: 1.4658129
            stt: 6.0274563
            gst: 0.8008282
    ProfitAndLossOtherChargesTaxes:
      type: object
      properties:
        transaction:
          type: number
          description: transaction charges
          format: float
        clearing:
          type: number
          description: clearing charges
          format: float
        ipft:
          type: number
          description: IPF charges
          format: float
        others:
          type: number
          description: others charges
          format: float
        sebi_turnover:
          type: number
          description: SEBI turnover
          format: float
        demat_transaction:
          type: number
          description: demat transaction charges
          format: float
      description: Other charges levied
      readOnly: true
      example:
        ipft: 2.302136
        demat_transaction: 3.6160767
        sebi_turnover: 9.301444
        transaction: 5.962134
        clearing: 5.637377
        others: 7.0614014
    GetPositionResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          type: array
          description: Response data for position details
          items:
            $ref: '#/components/schemas/PositionData'
      example:
        data:
        - day_sell_value: 0
          sell_price: 102.0
          buy_value: 120
          trading_symbol: GMR
          close_price: 102.0
          tradingsymbol: GMR
          day_buy_value: 120.01
          value: 120
          product: D
          sell_value: 0
          quantity: 2
          realised: 0
          multiplier: 1
          instrument_token: "151064324"
          average_price: 120.01
          overnight_buy_amount: 12
          day_sell_price: 0
          day_buy_price: 120.01
          day_sell_quantity: 0
          pnl: 121.01
          overnight_buy_quantity: 12
          overnight_quantity: 1
          exchange: NSE
          buy_price: 102.0
          day_buy_quantity: 1
          overnight_sell_quantity: 0
          overnight_sell_amount: 120.01
          unrealised: 121.01
          last_price: 120.01
        - day_sell_value: 0
          sell_price: 102.0
          buy_value: 120
          trading_symbol: GMR
          close_price: 102.0
          tradingsymbol: GMR
          day_buy_value: 120.01
          value: 120
          product: D
          sell_value: 0
          quantity: 2
          realised: 0
          multiplier: 1
          instrument_token: "151064324"
          average_price: 120.01
          overnight_buy_amount: 12
          day_sell_price: 0
          day_buy_price: 120.01
          day_sell_quantity: 0
          pnl: 121.01
          overnight_buy_quantity: 12
          overnight_quantity: 1
          exchange: NSE
          buy_price: 102.0
          day_buy_quantity: 1
          overnight_sell_quantity: 0
          overnight_sell_amount: 120.01
          unrealised: 121.01
          last_price: 120.01
        status: success
    PositionData:
      type: object
      properties:
        exchange:
          type: string
          description: Exchange to which the order is associated
          readOnly: true
          example: NSE
          enum:
          - NSE
          - NFO
          - CDS
          - BSE
          - BFO
          - BCD
          - MCX
          - NSCOM
        multiplier:
          type: number
          description: The quantity/lot size multiplier used for calculating P&Ls
          format: float
          readOnly: true
          example: 1
        value:
          type: number
          description: Net value of the position
          format: float
          readOnly: true
          example: 120
        pnl:
          type: number
          description: Profit and loss - net returns on the position
          format: float
          readOnly: true
          example: 121.01
        product:
          type: string
          description: "Shows if the order was either Intraday, Delivery, CO or OCO"
          readOnly: true
          example: D
        instrument_token:
          type: string
          description: Key issued by Upstox for the instrument
          readOnly: true
          example: "151064324"
        average_price:
          type: number
          description: Average price at which the net position quantity was acquired
          format: float
          readOnly: true
          example: 120.01
        buy_value:
          type: number
          description: Net value of the bought quantities
          format: float
          readOnly: true
          example: 120
        overnight_quantity:
          type: integer
          description: Quantity held previously and carried forward over night
          format: int32
          readOnly: true
          example: 1
        day_buy_value:
          type: number
          description: Amount at which the quantity is bought during the day
          format: float
          readOnly: true
          example: 120.01
        day_buy_price:
          type: number
          description: Average price at which the day qty was bought. Default is empty
            string
          format: float
          readOnly: true
          example: 120.01
        overnight_buy_amount:
          type: number
          description: Amount at which the quantity was bought in the previous session
          format: float
          readOnly: true
          example: 12
        overnight_buy_quantity:
          type: integer
          description: Quantity bought in the previous session
          format: int32
          readOnly: true
          example: 12
        day_buy_quantity:
          type: integer
          description: Quantity bought during the day
          format: int32
          readOnly: true
          example: 1
        day_sell_value:
          type: number
          description: Amount at which the quantity is sold during the day
          format: float
          readOnly: true
          example: 0
        day_sell_price:
          type: number
          description: Average price at which the day quantity was sold
          format: float
          readOnly: true
          example: 0
        overnight_sell_amount:
          type: number
          description: Amount at which the quantity was sold in the previous session
          format: float
          readOnly: true
          example: 120.01
        overnight_sell_quantity:
          type: integer
          description: Quantity sold short in the previous session
          format: int32
          readOnly: true
          example: 0
        day_sell_quantity:
          type: integer
          description: Quantity sold during the day
          format: int32
          readOnly: true
          example: 0
        quantity:
          type: integer
          description: Quantity left after nullifying Day and CF buy quantity towards
            Day and CF sell quantity
          format: int32
          readOnly: true
          example: 2
        last_price:
          type: number
          description: Last traded market price of the instrument
          format: float
          readOnly: true
          example: 120.01
        unrealised:
          type: number
          description: Day PnL generated against open positions
          format: float
          readOnly: true
          example: 121.01
        realised:
          type: number
          description: Day PnL generated against closed positions
          format: float
          readOnly: true
          example: 0
        sell_value:
          type: number
          description: Net value of the sold quantities
          format: float
          readOnly: true
          example: 0
        tradingsymbol:
          type: string
          description: Shows the trading symbol of the instrument
          readOnly: true
          example: GMR
          deprecated: true
        trading_symbol:
          type: string
          description: Shows the trading symbol of the instrument
          readOnly: true
          example: GMR
        close_price:
          type: number
          description: Closing price of the instrument from the last trading day
          format: float
          readOnly: true
          example: 102.0
        buy_price:
          type: number
          description: Average price at which quantities were bought
          format: float
          readOnly: true
          example: 102.0
        sell_price:
          type: number
          description: Average price at which quantities were sold
          format: float
          readOnly: true
          example: 102.0
      description: Response data for position details
      example:
        day_sell_value: 0
        sell_price: 102.0
        buy_value: 120
        trading_symbol: GMR
        close_price: 102.0
        tradingsymbol: GMR
        day_buy_value: 120.01
        value: 120
        product: D
        sell_value: 0
        quantity: 2
        realised: 0
        multiplier: 1
        instrument_token: "151064324"
        average_price: 120.01
        overnight_buy_amount: 12
        day_sell_price: 0
        day_buy_price: 120.01
        day_sell_quantity: 0
        pnl: 121.01
        overnight_buy_quantity: 12
        overnight_quantity: 1
        exchange: NSE
        buy_price: 102.0
        day_buy_quantity: 1
        overnight_sell_quantity: 0
        overnight_sell_amount: 120.01
        unrealised: 121.01
        last_price: 120.01
    GetHoldingsResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          type: array
          description: Response data for holdings
          items:
            $ref: '#/components/schemas/HoldingsData'
      example:
        data:
        - day_change: 0
          product: D
          quantity: 1
          collateral_type: WC
          instrument_token: "151064324"
          average_price: 120.01
          cnc_used_quantity: 0
          haircut: 0.23
          collateral_quantity: 0
          pnl: 120.01
          t1_quantity: 0
          trading_symbol: BSE
          close_price: 120.01
          collateral_update_quantity: 0
          company_name: BSE LIM
          tradingsymbol: BSE
          exchange: NSE
          day_change_percentage: 0
          isin: INE118H01025
          last_price: 120.01
        - day_change: 0
          product: D
          quantity: 1
          collateral_type: WC
          instrument_token: "151064324"
          average_price: 120.01
          cnc_used_quantity: 0
          haircut: 0.23
          collateral_quantity: 0
          pnl: 120.01
          t1_quantity: 0
          trading_symbol: BSE
          close_price: 120.01
          collateral_update_quantity: 0
          company_name: BSE LIM
          tradingsymbol: BSE
          exchange: NSE
          day_change_percentage: 0
          isin: INE118H01025
          last_price: 120.01
        status: success
    HoldingsData:
      type: object
      properties:
        isin:
          type: string
          description: The standard ISIN representing stocks listed on multiple exchanges
          readOnly: true
          example: INE118H01025
        cnc_used_quantity:
          type: integer
          description: Quantity either blocked towards open or completed order
          format: int32
          readOnly: true
          example: 0
        collateral_type:
          type: string
          description: Category of collateral assigned by RMS
          readOnly: true
          example: WC
        company_name:
          type: string
          description: Name of the company
          readOnly: true
          example: BSE LIM
        haircut:
          type: number
          description: This is the haircut percentage applied from RMS (applicable
            incase of collateral)
          format: float
          readOnly: true
          example: 0.23
        product:
          type: string
          description: "Shows if the order was either Intraday, Delivery, CO or OCO"
          readOnly: true
          example: D
        quantity:
          type: integer
          description: The total holding qty
          format: int32
          readOnly: true
          example: 1
        tradingsymbol:
          type: string
          description: Shows the trading symbol of the instrument
          readOnly: true
          example: BSE
          deprecated: true
        last_price:
          type: number
          description: The last traded price of the instrument
          format: float
          readOnly: true
          example: 120.01
        close_price:
          type: number
          description: Closing price of the instrument from the last trading day
          format: float
          readOnly: true
          example: 120.01
        pnl:
          type: number
          description: Profit and Loss
          format: float
          readOnly: true
          example: 120.01
        day_change:
          type: number
          description: Day's change in absolute value for the stock
          format: float
          readOnly: true
          example: 0
        day_change_percentage:
          type: number
          description: Day's change in percentage for the stock
          format: float
          readOnly: true
          example: 0
        instrument_token:
          type: string
          description: Key issued by Upstox for the instrument
          readOnly: true
          example: "151064324"
        average_price:
          type: number
          description: Average price at which the net holding quantity was acquired
          format: float
          readOnly: true
          example: 120.01
        collateral_quantity:
          type: integer
          description: Quantity marked as collateral by RMS on users request
          format: int32
          readOnly: true
          example: 0
        collateral_update_quantity:
          type: integer
          format: int32
          readOnly: true
          example: 0
        trading_symbol:
          type: string
          description: Shows the trading symbol of the instrument
          readOnly: true
          example: BSE
        t1_quantity:
          type: integer
          description: Quantity on T+1 day after order execution
          format: int32
          readOnly: true
          example: 0
        exchange:
          type: string
          description: Exchange of the trading symbol
          readOnly: true
          example: NSE
          enum:
          - NSE
          - NFO
          - CDS
          - BSE
          - BFO
          - BCD
          - MCX
          - NSCOM
      description: Response data for holdings
      example:
        day_change: 0
        product: D
        quantity: 1
        collateral_type: WC
        instrument_token: "151064324"
        average_price: 120.01
        cnc_used_quantity: 0
        haircut: 0.23
        collateral_quantity: 0
        pnl: 120.01
        t1_quantity: 0
        trading_symbol: BSE
        close_price: 120.01
        collateral_update_quantity: 0
        company_name: BSE LIM
        tradingsymbol: BSE
        exchange: NSE
        day_change_percentage: 0
        isin: INE118H01025
        last_price: 120.01
    GetTradeResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          type: array
          description: Response data for trades
          items:
            $ref: '#/components/schemas/TradeData'
      example:
        data:
        - product: D
          quantity: 1
          instrument_token: "151064324"
          average_price: 299.4
          order_timestamp: 23-Apr-2021 14:22:06
          transaction_type: BUY
          exchange_order_id: "221013001021540"
          trading_symbol: GMRINFRA-EQ
          trade_id: "50091502"
          order_ref_id: udapi-aqwsed14356
          exchange_timestamp: 03-Aug-2017 15:03:42
          tradingsymbol: GMRINFRA-EQ
          exchange: NSE
          order_type: MARKET
          order_id: "221013001021539"
        - product: D
          quantity: 1
          instrument_token: "151064324"
          average_price: 299.4
          order_timestamp: 23-Apr-2021 14:22:06
          transaction_type: BUY
          exchange_order_id: "221013001021540"
          trading_symbol: GMRINFRA-EQ
          trade_id: "50091502"
          order_ref_id: udapi-aqwsed14356
          exchange_timestamp: 03-Aug-2017 15:03:42
          tradingsymbol: GMRINFRA-EQ
          exchange: NSE
          order_type: MARKET
          order_id: "221013001021539"
        status: success
    TradeData:
      type: object
      properties:
        exchange:
          type: string
          description: Exchange to which the order is associated
          readOnly: true
          example: NSE
          enum:
          - NSE
          - NFO
          - CDS
          - BSE
          - BFO
          - BCD
          - MCX
          - NSCOM
        product:
          type: string
          description: "Shows if the order was either Intraday, Delivery, CO or OCO"
          readOnly: true
          example: D
          enum:
          - I
          - D
          - CO
          - OCO
          - MTF
        tradingsymbol:
          type: string
          description: "Shows the trading symbol which could be a combination of symbol\
            \ name, instrument, expiry date etc"
          readOnly: true
          example: GMRINFRA-EQ
          deprecated: true
        trading_symbol:
          type: string
          description: "Shows the trading symbol which could be a combination of symbol\
            \ name, instrument, expiry date etc"
          readOnly: true
          example: GMRINFRA-EQ
        instrument_token:
          type: string
          description: Identifier issued by Upstox used for subscribing to live market
            quotes
          readOnly: true
          example: "151064324"
        order_type:
          type: string
          description: |-
            Type of order. It can be one of the following
            MARKET refers to market order<br>LIMIT refers to Limit Order<br>SL refers to Stop Loss Limit<br>SL-M refers to Stop loss market
          readOnly: true
          example: MARKET
          enum:
          - MARKET
          - LIMIT
          - SL
          - SL-M
        transaction_type:
          type: string
          description: Indicates whether the order was a buy or sell order
          readOnly: true
          example: BUY
          enum:
          - BUY
          - SELL
        quantity:
          type: integer
          description: The total quantity traded from this particular order
          format: int32
          readOnly: true
          example: 1
        exchange_order_id:
          type: string
          description: Unique order ID assigned by the exchange for the order placed
          readOnly: true
          example: "221013001021540"
        order_id:
          type: string
          description: Unique order ID assigned internally for the order placed
          readOnly: true
          example: "221013001021539"
        exchange_timestamp:
          type: string
          description: User readable time at when the trade occurred
          readOnly: true
          example: 03-Aug-2017 15:03:42
        average_price:
          type: number
          description: Price at which the traded quantity is traded
          format: float
          readOnly: true
          example: 299.4
        trade_id:
          type: string
          description: Trade ID generated from exchange towards traded transaction
          readOnly: true
          example: "50091502"
        order_ref_id:
          type: string
          description: The order reference ID for which the order must be modified
          readOnly: true
          example: udapi-aqwsed14356
        order_timestamp:
          type: string
          description: User readable timestamp at which the order was placed
          readOnly: true
          example: 23-Apr-2021 14:22:06
      description: Response data for trades
      example:
        product: D
        quantity: 1
        instrument_token: "151064324"
        average_price: 299.4
        order_timestamp: 23-Apr-2021 14:22:06
        transaction_type: BUY
        exchange_order_id: "221013001021540"
        trading_symbol: GMRINFRA-EQ
        trade_id: "50091502"
        order_ref_id: udapi-aqwsed14356
        exchange_timestamp: 03-Aug-2017 15:03:42
        tradingsymbol: GMRINFRA-EQ
        exchange: NSE
        order_type: MARKET
        order_id: "221013001021539"
    GetOrderBookResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          type: array
          description: Response data for order Book
          items:
            $ref: '#/components/schemas/OrderBookData'
      example:
        data:
        - placed_by: "200123"
          status_message: status_message
          is_amo: false
          exchange_order_id: "221013001021540"
          trading_symbol: GMR
          order_ref_id: udapi-12345abcd
          variety: SIMPLE
          price: 120.01
          tradingsymbol: GMR
          tag: tag
          parent_order_id: "221013001021541"
          filled_quantity: 0
          order_type: MARKET
          disclosed_quantity: 1
          product: D
          quantity: 1
          order_request_id: "221013001021542"
          instrument_token: "151064324"
          average_price: 120.01
          order_timestamp: 23-Apr-2021 14:22:06
          pending_quantity: 1
          transaction_type: BUY
          status_message_raw: status_message_raw
          trigger_price: 120
          exchange_timestamp: 24-Apr-2021 14:22:06
          guid: guid
          exchange: NSE
          validity: DAY
          order_id: "221013001021541"
          status: Complete
        - placed_by: "200123"
          status_message: status_message
          is_amo: false
          exchange_order_id: "221013001021540"
          trading_symbol: GMR
          order_ref_id: udapi-12345abcd
          variety: SIMPLE
          price: 120.01
          tradingsymbol: GMR
          tag: tag
          parent_order_id: "221013001021541"
          filled_quantity: 0
          order_type: MARKET
          disclosed_quantity: 1
          product: D
          quantity: 1
          order_request_id: "221013001021542"
          instrument_token: "151064324"
          average_price: 120.01
          order_timestamp: 23-Apr-2021 14:22:06
          pending_quantity: 1
          transaction_type: BUY
          status_message_raw: status_message_raw
          trigger_price: 120
          exchange_timestamp: 24-Apr-2021 14:22:06
          guid: guid
          exchange: NSE
          validity: DAY
          order_id: "221013001021541"
          status: Complete
        status: success
    OrderBookData:
      type: object
      properties:
        exchange:
          type: string
          description: Exchange to which the order is associated
          readOnly: true
          example: NSE
          enum:
          - NSE
          - NFO
          - CDS
          - BSE
          - BFO
          - BCD
          - MCX
          - NSCOM
        product:
          type: string
          description: "Shows if the order was either Intraday, Delivery, CoverOrder\
            \ or OneCancelsOther"
          readOnly: true
          example: D
          enum:
          - I
          - D
          - CO
          - OCO
          - MTF
        price:
          type: number
          description: Price at which the order was placed
          format: float
          readOnly: true
          example: 120.01
        quantity:
          type: integer
          description: Quantity with which the order was placed
          format: int32
          readOnly: true
          example: 1
        status:
          type: string
          description: Indicates the current status of the order. Valid order status’
            are outlined in the table below
          readOnly: true
          example: Complete
        guid:
          type: string
          readOnly: true
        tag:
          type: string
          description: Tag to uniquely identify an order
          readOnly: true
        instrument_token:
          type: string
          description: Identifier issued by Upstox used for subscribing to live market
            quotes
          readOnly: true
          example: "151064324"
        placed_by:
          type: string
          description: Uniquely identifies the user
          readOnly: true
          example: "200123"
        tradingsymbol:
          type: string
          description: Shows the trading symbol of the instrument
          readOnly: true
          example: GMR
          deprecated: true
        trading_symbol:
          type: string
          description: Shows the trading symbol of the instrument
          readOnly: true
          example: GMR
        order_type:
          type: string
          description: |-
            Type of order. It can be one of the following
            MARKET refers to market order<br>LIMIT refers to Limit Order<br>SL refers to Stop Loss Limit<br>SL-M refers to Stop loss market
          readOnly: true
          example: MARKET
          enum:
          - MARKET
          - LIMIT
          - SL
          - SL-M
        validity:
          type: string
          description: Order validity (DAY- Day and IOC- Immediate or Cancel (IOC)
            order)
          readOnly: true
          example: DAY
          enum:
          - DAY
          - IOC
          - EOS
        trigger_price:
          type: number
          description: If the order was a stop loss order then the trigger price set
            is mentioned here
          format: float
          readOnly: true
          example: 120
        disclosed_quantity:
          type: integer
          description: The quantity that should be disclosed in the market depth
          format: int32
          readOnly: true
          example: 1
        transaction_type:
          type: string
          description: Indicates whether the order was a buy or sell order
          readOnly: true
          example: BUY
          enum:
          - BUY
          - SELL
        average_price:
          type: number
          description: Average price at which the qty got traded
          format: float
          readOnly: true
          example: 120.01
        filled_quantity:
          type: integer
          description: The total quantity traded from this particular order
          format: int32
          readOnly: true
        pending_quantity:
          type: integer
          description: Pending quantity to be filled
          format: int32
          readOnly: true
          example: 1
        status_message:
          type: string
          description: "Indicates the reason when any order is rejected, not modified\
            \ or cancelled"
          readOnly: true
        status_message_raw:
          type: string
          description: Description of the order's status as received from RMS
          readOnly: true
        exchange_order_id:
          type: string
          description: Unique order ID assigned by the exchange for the order placed
          readOnly: true
          example: "221013001021540"
        parent_order_id:
          type: string
          description: "In case the order is part of the second or third leg of a\
            \ CO or OCO, the parent order ID is indicated here"
          readOnly: true
          example: "221013001021541"
        order_id:
          type: string
          description: Unique order ID assigned internally for the order placed
          readOnly: true
          example: "221013001021541"
        variety:
          type: string
          description: Order complexity
          readOnly: true
          example: SIMPLE
        order_timestamp:
          type: string
          description: User readable timestamp at which the order was placed
          readOnly: true
          example: 23-Apr-2021 14:22:06
        exchange_timestamp:
          type: string
          description: User readable time at which the order was placed or updated
          readOnly: true
          example: 24-Apr-2021 14:22:06
        is_amo:
          type: boolean
          description: Signifies if the order is an After Market Order
          readOnly: true
          example: false
        order_request_id:
          type: string
          description: Apart from 1st order it shows the count of how many requests
            were sent
          readOnly: true
          example: "221013001021542"
        order_ref_id:
          type: string
          description: The order reference ID for which the order must be modified
          readOnly: true
          example: udapi-12345abcd
      description: Response data for order details
      example:
        placed_by: "200123"
        status_message: status_message
        is_amo: false
        exchange_order_id: "221013001021540"
        trading_symbol: GMR
        order_ref_id: udapi-12345abcd
        variety: SIMPLE
        price: 120.01
        tradingsymbol: GMR
        tag: tag
        parent_order_id: "221013001021541"
        filled_quantity: 0
        order_type: MARKET
        disclosed_quantity: 1
        product: D
        quantity: 1
        order_request_id: "221013001021542"
        instrument_token: "151064324"
        average_price: 120.01
        order_timestamp: 23-Apr-2021 14:22:06
        pending_quantity: 1
        transaction_type: BUY
        status_message_raw: status_message_raw
        trigger_price: 120
        exchange_timestamp: 24-Apr-2021 14:22:06
        guid: guid
        exchange: NSE
        validity: DAY
        order_id: "221013001021541"
        status: Complete
    GetOrderResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          type: array
          description: Response data for order details
          items:
            $ref: '#/components/schemas/OrderData'
      example:
        data:
        - is_amo: false
          status_message: status_message
          placed_by: "200123"
          exchange_order_id: "221013001021540"
          trading_symbol: GMR
          variety: SIMPLE
          price: 120.01
          tradingsymbol: GMR
          tag: tag
          parent_order_id: "221013001021543"
          filled_quantity: 1
          order_type: MARKET
          disclosed_quantity: 1
          product: D
          quantity: 1
          order_request_id: "221013001021542"
          average_price: 120.01
          instrument_token: "151064324"
          order_timestamp: 23-Apr-2021 14:22:06
          transaction_type: BUY
          exchange_timestamp: 03-Aug-2017 15:03:42
          trigger_price: 120.01
          exchange: NSE
          validity: DAY
          order_id: "221013001021541"
          status: complete
        - is_amo: false
          status_message: status_message
          placed_by: "200123"
          exchange_order_id: "221013001021540"
          trading_symbol: GMR
          variety: SIMPLE
          price: 120.01
          tradingsymbol: GMR
          tag: tag
          parent_order_id: "221013001021543"
          filled_quantity: 1
          order_type: MARKET
          disclosed_quantity: 1
          product: D
          quantity: 1
          order_request_id: "221013001021542"
          average_price: 120.01
          instrument_token: "151064324"
          order_timestamp: 23-Apr-2021 14:22:06
          transaction_type: BUY
          exchange_timestamp: 03-Aug-2017 15:03:42
          trigger_price: 120.01
          exchange: NSE
          validity: DAY
          order_id: "221013001021541"
          status: complete
        status: success
    OrderData:
      type: object
      properties:
        exchange:
          type: string
          description: Exchange to which the order is associated
          readOnly: true
          example: NSE
          enum:
          - NSE
          - NFO
          - CDS
          - BSE
          - BFO
          - BCD
          - MCX
          - NSCOM
        price:
          type: number
          description: Price at which the order was placed
          format: float
          readOnly: true
          example: 120.01
        product:
          type: string
          description: "Shows if the order was either Intraday, Delivery, CoverOrder\
            \ or OneCancelsOther"
          readOnly: true
          example: D
          enum:
          - I
          - D
          - CO
          - OCO
          - MTF
        quantity:
          type: integer
          description: Quantity with which the order was placed
          format: int32
          readOnly: true
          example: 1
        status:
          type: string
          description: Indicates the current status of the order. Valid order status’
            are outlined in the table below
          readOnly: true
          example: complete
        tag:
          type: string
          description: Tag to uniquely identify an order
          readOnly: true
        validity:
          type: string
          description: Order validity (DAY- Day and IOC- Immediate or Cancel (IOC)
            order)
          readOnly: true
          example: DAY
          enum:
          - DAY
          - IOC
          - EOS
        average_price:
          type: number
          description: Average price at which the qty got traded
          format: float
          readOnly: true
          example: 120.01
        disclosed_quantity:
          type: integer
          description: The quantity that should be disclosed in the market depth
          format: int32
          readOnly: true
          example: 1
        exchange_order_id:
          type: string
          description: Unique order ID assigned by the exchange for the order placed
          readOnly: true
          example: "221013001021540"
        exchange_timestamp:
          type: string
          description: User readable time at which the order was placed or updated
          readOnly: true
          example: 03-Aug-2017 15:03:42
        instrument_token:
          type: string
          description: Identifier issued by Upstox used for subscribing to live market
            quotes
          readOnly: true
          example: "151064324"
        is_amo:
          type: boolean
          description: Signifies if the order is an After Market Order
          readOnly: true
          example: false
        status_message:
          type: string
          description: "Indicates the reason when any order is rejected, not modified\
            \ or cancelled"
          readOnly: true
        order_id:
          type: string
          description: Unique order ID assigned internally for the order placed
          readOnly: true
          example: "221013001021541"
        order_request_id:
          type: string
          description: Apart from 1st order it shows the count of how many requests
            were sent
          readOnly: true
          example: "221013001021542"
        order_type:
          type: string
          description: |-
            Type of order. It can be one of the following
            MARKET refers to market order<br>LIMIT refers to Limit Order<br>SL refers to Stop Loss Limit<br>SL-M refers to Stop loss market
          readOnly: true
          example: MARKET
          enum:
          - MARKET
          - LIMIT
          - SL
          - SL-M
        parent_order_id:
          type: string
          description: "In case the order is part of the second or third leg of a\
            \ CO or OCO, the parent order ID is indicated here"
          readOnly: true
          example: "221013001021543"
        tradingsymbol:
          type: string
          description: Shows the trading symbol of the instrument
          readOnly: true
          example: GMR
          deprecated: true
        trading_symbol:
          type: string
          description: Shows the trading symbol of the instrument
          readOnly: true
          example: GMR
        order_timestamp:
          type: string
          description: User readable timestamp at which the order was placed
          readOnly: true
          example: 23-Apr-2021 14:22:06
        filled_quantity:
          type: integer
          description: The total quantity traded from this particular order
          format: int32
          readOnly: true
          example: 1
        transaction_type:
          type: string
          description: Indicates whether the order was a buy or sell order
          readOnly: true
          example: BUY
          enum:
          - BUY
          - SELL
        trigger_price:
          type: number
          description: If the order was a stop loss order then the trigger price set
            is mentioned here
          format: float
          readOnly: true
          example: 120.01
        placed_by:
          type: string
          description: Uniquely identifies the user
          readOnly: true
          example: "200123"
        variety:
          type: string
          description: Order complexity
          readOnly: true
          example: SIMPLE
      description: Response data for order details
      example:
        is_amo: false
        status_message: status_message
        placed_by: "200123"
        exchange_order_id: "221013001021540"
        trading_symbol: GMR
        variety: SIMPLE
        price: 120.01
        tradingsymbol: GMR
        tag: tag
        parent_order_id: "221013001021543"
        filled_quantity: 1
        order_type: MARKET
        disclosed_quantity: 1
        product: D
        quantity: 1
        order_request_id: "221013001021542"
        average_price: 120.01
        instrument_token: "151064324"
        order_timestamp: 23-Apr-2021 14:22:06
        transaction_type: BUY
        exchange_timestamp: 03-Aug-2017 15:03:42
        trigger_price: 120.01
        exchange: NSE
        validity: DAY
        order_id: "221013001021541"
        status: complete
    GetOrderDetailsResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          $ref: '#/components/schemas/OrderBookData'
      example:
        data:
          placed_by: "200123"
          status_message: status_message
          is_amo: false
          exchange_order_id: "221013001021540"
          trading_symbol: GMR
          order_ref_id: udapi-12345abcd
          variety: SIMPLE
          price: 120.01
          tradingsymbol: GMR
          tag: tag
          parent_order_id: "221013001021541"
          filled_quantity: 0
          order_type: MARKET
          disclosed_quantity: 1
          product: D
          quantity: 1
          order_request_id: "221013001021542"
          instrument_token: "151064324"
          average_price: 120.01
          order_timestamp: 23-Apr-2021 14:22:06
          pending_quantity: 1
          transaction_type: BUY
          status_message_raw: status_message_raw
          trigger_price: 120
          exchange_timestamp: 24-Apr-2021 14:22:06
          guid: guid
          exchange: NSE
          validity: DAY
          order_id: "221013001021541"
          status: Complete
        status: success
    GetOptionContractResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          type: array
          description: Response data for option contracts
          items:
            $ref: '#/components/schemas/InstrumentData'
      example:
        data:
        - country: country
          price_denominator: 2.027123023002322
          latency: latency
          price_numerator: 3.616076749251911
          description: description
          general_numerator: 9.301444243932576
          instrument_type: instrument_type
          price_quote_unit: price_quote_unit
          weekly: true
          tick_size: 0.8008281904610115
          freeze_quantity: 1.4658129805029452
          trading_symbol: trading_symbol
          segment: segment
          currency: currency
          lot_size: 6
          expiry: 2000-01-23T04:56:07.000+00:00
          underlying_type: underlying_type
          security_type: security_type
          strike_price: 5.962133916683182
          instrument_key: instrument_key
          mtf_bracket: 4.145608029883936
          underlying_symbol: underlying_symbol
          end_time: end_time
          qty_multiplier: 5
          mtf_enabled: true
          last_trading_date: 2000-01-23T04:56:07.000+00:00
          general_denominator: 7.061401241503109
          start_time: start_time
          name: name
          exchange_token: exchange_token
          week_days: week_days
          exchange: exchange
          short_name: short_name
          underlying_key: underlying_key
          minimum_lot: 2
          isin: isin
        - country: country
          price_denominator: 2.027123023002322
          latency: latency
          price_numerator: 3.616076749251911
          description: description
          general_numerator: 9.301444243932576
          instrument_type: instrument_type
          price_quote_unit: price_quote_unit
          weekly: true
          tick_size: 0.8008281904610115
          freeze_quantity: 1.4658129805029452
          trading_symbol: trading_symbol
          segment: segment
          currency: currency
          lot_size: 6
          expiry: 2000-01-23T04:56:07.000+00:00
          underlying_type: underlying_type
          security_type: security_type
          strike_price: 5.962133916683182
          instrument_key: instrument_key
          mtf_bracket: 4.145608029883936
          underlying_symbol: underlying_symbol
          end_time: end_time
          qty_multiplier: 5
          mtf_enabled: true
          last_trading_date: 2000-01-23T04:56:07.000+00:00
          general_denominator: 7.061401241503109
          start_time: start_time
          name: name
          exchange_token: exchange_token
          week_days: week_days
          exchange: exchange
          short_name: short_name
          underlying_key: underlying_key
          minimum_lot: 2
          isin: isin
        status: success
    InstrumentData:
      type: object
      properties:
        name:
          type: string
        segment:
          type: string
        exchange:
          type: string
        isin:
          type: string
        expiry:
          type: string
          format: date-time
        country:
          type: string
        latency:
          type: string
        description:
          type: string
        currency:
          type: string
        weekly:
          type: boolean
        instrument_key:
          type: string
        exchange_token:
          type: string
        trading_symbol:
          type: string
        short_name:
          type: string
        tick_size:
          type: number
          format: double
        lot_size:
          type: integer
          format: int64
        instrument_type:
          type: string
        freeze_quantity:
          type: number
          format: double
        underlying_key:
          type: string
        underlying_type:
          type: string
        underlying_symbol:
          type: string
        last_trading_date:
          type: string
          format: date-time
        strike_price:
          type: number
          format: double
        price_quote_unit:
          type: string
        qty_multiplier:
          type: integer
          format: int64
        minimum_lot:
          type: integer
          format: int64
        start_time:
          type: string
        end_time:
          type: string
        week_days:
          type: string
        general_denominator:
          type: number
          format: double
        general_numerator:
          type: number
          format: double
        price_numerator:
          type: number
          format: double
        price_denominator:
          type: number
          format: double
        mtf_enabled:
          type: boolean
        mtf_bracket:
          type: number
          format: double
        security_type:
          type: string
      description: Response data for option contracts
      example:
        country: country
        price_denominator: 2.027123023002322
        latency: latency
        price_numerator: 3.616076749251911
        description: description
        general_numerator: 9.301444243932576
        instrument_type: instrument_type
        price_quote_unit: price_quote_unit
        weekly: true
        tick_size: 0.8008281904610115
        freeze_quantity: 1.4658129805029452
        trading_symbol: trading_symbol
        segment: segment
        currency: currency
        lot_size: 6
        expiry: 2000-01-23T04:56:07.000+00:00
        underlying_type: underlying_type
        security_type: security_type
        strike_price: 5.962133916683182
        instrument_key: instrument_key
        mtf_bracket: 4.145608029883936
        underlying_symbol: underlying_symbol
        end_time: end_time
        qty_multiplier: 5
        mtf_enabled: true
        last_trading_date: 2000-01-23T04:56:07.000+00:00
        general_denominator: 7.061401241503109
        start_time: start_time
        name: name
        exchange_token: exchange_token
        week_days: week_days
        exchange: exchange
        short_name: short_name
        underlying_key: underlying_key
        minimum_lot: 2
        isin: isin
    AnalyticsData:
      type: object
      properties:
        vega:
          type: number
          format: double
        theta:
          type: number
          format: double
        gamma:
          type: number
          format: double
        delta:
          type: number
          format: double
        iv:
          type: number
          format: double
        pop:
          type: number
          format: double
      example:
        pop: 1.1730742509559433
        delta: 6.84685269835264
        theta: 1.0246457001441578
        iv: 7.457744773683766
        vega: 1.2315135367772556
        gamma: 1.4894159098541704
    GetOptionChainResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          type: array
          description: Response data for option chain data
          items:
            $ref: '#/components/schemas/OptionStrikeData'
      example:
        data:
        - underlying_spot_price: 1.4658129805029452
          call_options:
            instrument_key: instrument_key
            market_data:
              volume: 5
              close_price: 7.061401241503109
              ltp: 5.962133916683182
              bid_qty: 3
              oi: 2.3021358869347655
              ask_qty: 4
              bid_price: 9.301444243932576
              prev_oi: 7.386281948385884
              ask_price: 2.027123023002322
            option_greeks:
              pop: 1.1730742509559433
              delta: 6.84685269835264
              theta: 1.0246457001441578
              iv: 7.457744773683766
              vega: 1.2315135367772556
              gamma: 1.4894159098541704
          put_options: null
          expiry: 2000-01-23T04:56:07.000+00:00
          underlying_key: underlying_key
          pcr: 0.8008281904610115
          strike_price: 6.027456183070403
        - underlying_spot_price: 1.4658129805029452
          call_options:
            instrument_key: instrument_key
            market_data:
              volume: 5
              close_price: 7.061401241503109
              ltp: 5.962133916683182
              bid_qty: 3
              oi: 2.3021358869347655
              ask_qty: 4
              bid_price: 9.301444243932576
              prev_oi: 7.386281948385884
              ask_price: 2.027123023002322
            option_greeks:
              pop: 1.1730742509559433
              delta: 6.84685269835264
              theta: 1.0246457001441578
              iv: 7.457744773683766
              vega: 1.2315135367772556
              gamma: 1.4894159098541704
          put_options: null
          expiry: 2000-01-23T04:56:07.000+00:00
          underlying_key: underlying_key
          pcr: 0.8008281904610115
          strike_price: 6.027456183070403
        status: success
    MarketData:
      type: object
      properties:
        ltp:
          type: number
          format: double
        volume:
          type: integer
          format: int64
        oi:
          type: number
          format: double
        close_price:
          type: number
          format: double
        bid_price:
          type: number
          format: double
        bid_qty:
          type: integer
          format: int32
        ask_price:
          type: number
          format: double
        ask_qty:
          type: integer
          format: int32
        prev_oi:
          type: number
          format: double
      example:
        volume: 5
        close_price: 7.061401241503109
        ltp: 5.962133916683182
        bid_qty: 3
        oi: 2.3021358869347655
        ask_qty: 4
        bid_price: 9.301444243932576
        prev_oi: 7.386281948385884
        ask_price: 2.027123023002322
    OptionStrikeData:
      type: object
      properties:
        expiry:
          type: string
          format: date-time
        pcr:
          type: number
          format: double
        strike_price:
          type: number
          format: double
        underlying_key:
          type: string
        underlying_spot_price:
          type: number
          format: double
        call_options:
          $ref: '#/components/schemas/PutCallOptionChainData'
        put_options:
          $ref: '#/components/schemas/PutCallOptionChainData'
      description: Response data for option chain data
      example:
        underlying_spot_price: 1.4658129805029452
        call_options:
          instrument_key: instrument_key
          market_data:
            volume: 5
            close_price: 7.061401241503109
            ltp: 5.962133916683182
            bid_qty: 3
            oi: 2.3021358869347655
            ask_qty: 4
            bid_price: 9.301444243932576
            prev_oi: 7.386281948385884
            ask_price: 2.027123023002322
          option_greeks:
            pop: 1.1730742509559433
            delta: 6.84685269835264
            theta: 1.0246457001441578
            iv: 7.457744773683766
            vega: 1.2315135367772556
            gamma: 1.4894159098541704
        put_options: null
        expiry: 2000-01-23T04:56:07.000+00:00
        underlying_key: underlying_key
        pcr: 0.8008281904610115
        strike_price: 6.027456183070403
    PutCallOptionChainData:
      type: object
      properties:
        instrument_key:
          type: string
        market_data:
          $ref: '#/components/schemas/MarketData'
        option_greeks:
          $ref: '#/components/schemas/AnalyticsData'
      example:
        instrument_key: instrument_key
        market_data:
          volume: 5
          close_price: 7.061401241503109
          ltp: 5.962133916683182
          bid_qty: 3
          oi: 2.3021358869347655
          ask_qty: 4
          bid_price: 9.301444243932576
          prev_oi: 7.386281948385884
          ask_price: 2.027123023002322
        option_greeks:
          pop: 1.1730742509559433
          delta: 6.84685269835264
          theta: 1.0246457001441578
          iv: 7.457744773683766
          vega: 1.2315135367772556
          gamma: 1.4894159098541704
    ExchangeTimingData:
      type: object
      properties:
        exchange:
          type: string
        start_time:
          type: integer
          format: int64
        end_time:
          type: integer
          format: int64
      example:
        start_time: 0
        end_time: 6
        exchange: exchange
    GetExchangeTimingResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          type: array
          description: Response data for exchange timing list
          items:
            $ref: '#/components/schemas/ExchangeTimingData'
      example:
        data:
        - start_time: 0
          end_time: 6
          exchange: exchange
        - start_time: 0
          end_time: 6
          exchange: exchange
        status: success
    GetMarketStatusResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          $ref: '#/components/schemas/MarketStatusData'
      example:
        data:
          last_updated: 0
          exchange: exchange
          status: status
        status: success
    MarketStatusData:
      type: object
      properties:
        exchange:
          type: string
        status:
          type: string
        last_updated:
          type: integer
          format: int64
      description: Response data for market live status
      example:
        last_updated: 0
        exchange: exchange
        status: status
    GetHolidayResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          type: array
          description: Response data for holiday list
          items:
            $ref: '#/components/schemas/HolidayData'
      example:
        data:
        - date: 2000-01-23T04:56:07.000+00:00
          closed_exchanges:
          - closed_exchanges
          - closed_exchanges
          description: description
          open_exchanges:
          - start_time: 0
            end_time: 6
            exchange: exchange
          - start_time: 0
            end_time: 6
            exchange: exchange
          holiday_type: ALL
        - date: 2000-01-23T04:56:07.000+00:00
          closed_exchanges:
          - closed_exchanges
          - closed_exchanges
          description: description
          open_exchanges:
          - start_time: 0
            end_time: 6
            exchange: exchange
          - start_time: 0
            end_time: 6
            exchange: exchange
          holiday_type: ALL
        status: success
    HolidayData:
      type: object
      properties:
        date:
          type: string
          format: date-time
        description:
          type: string
        holiday_type:
          type: string
          enum:
          - ALL
          - SETTLEMENT_HOLIDAY
          - TRADING_HOLIDAY
          - SPECIAL_TIMING
        closed_exchanges:
          type: array
          items:
            type: string
        open_exchanges:
          type: array
          items:
            $ref: '#/components/schemas/ExchangeTimingData'
      description: Response data for holiday list
      example:
        date: 2000-01-23T04:56:07.000+00:00
        closed_exchanges:
        - closed_exchanges
        - closed_exchanges
        description: description
        open_exchanges:
        - start_time: 0
          end_time: 6
          exchange: exchange
        - start_time: 0
          end_time: 6
          exchange: exchange
        holiday_type: ALL
    Depth:
      type: object
      properties:
        quantity:
          type: integer
          description: quantity
          format: int32
        price:
          type: number
          description: price
          format: double
        orders:
          type: integer
          description: orders
          format: int32
      description: Asks
      readOnly: true
      example: 120.01
    DepthMap:
      type: object
      properties:
        buy:
          type: array
          description: Bids
          readOnly: true
          example: 120.01
          items:
            $ref: '#/components/schemas/Depth'
        sell:
          type: array
          description: Asks
          readOnly: true
          example: 120.01
          items:
            $ref: '#/components/schemas/Depth'
      example:
        buy: 120.01
        sell: 120.01
    GetFullMarketQuoteResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MarketQuoteSymbol'
      example:
        data:
          key:
            symbol: NHPC
            ohlc:
              high: 121.0
              low: 119.0
              close: 120.0
              open: 120.01
            lower_circuit_limit: 119.0
            upper_circuit_limit: 121.0
            total_buy_quantity: 0
            instrument_token: NSE_EQ|INE160A01022
            average_price: 120.01
            oi_day_low: 0
            oi_day_high: 0
            last_trade_time: 2022-11-16 06:14:48
            net_change: 0.01
            volume: 2344451
            depth:
              buy: 120.01
              sell: 120.01
            total_sell_quantity: 0
            oi: 0
            timestamp: 2022-11-16 06:14:48
            last_price: 120.01
        status: success
    MarketQuoteSymbol:
      type: object
      properties:
        ohlc:
          $ref: '#/components/schemas/Ohlc'
        depth:
          $ref: '#/components/schemas/DepthMap'
        timestamp:
          type: string
          description: Time in milliseconds at which the feeds was updated
          readOnly: true
          example: 2022-11-16 06:14:48
        instrument_token:
          type: string
          description: Key issued by Upstox for the instrument
          readOnly: true
          example: NSE_EQ|INE160A01022
        symbol:
          type: string
          description: Shows the trading symbol of the instrument
          readOnly: true
          example: NHPC
        last_price:
          type: number
          description: The last traded price of symbol
          format: double
          readOnly: true
          example: 120.01
        volume:
          type: integer
          description: The volume traded today on symbol
          format: int64
          readOnly: true
          example: 2344451
        average_price:
          type: number
          description: Average price
          format: double
          readOnly: true
          example: 120.01
        oi:
          type: number
          description: Total number of outstanding contracts held by market participants
            exchange-wide (only F&O)
          format: double
          readOnly: true
          example: 0
        net_change:
          type: number
          description: The absolute change from yesterday's close to last traded price
          format: double
          readOnly: true
          example: 0.01
        total_buy_quantity:
          type: number
          description: The total number of bid quantity available for trading
          format: double
          readOnly: true
          example: 0
        total_sell_quantity:
          type: number
          description: The total number of ask quantity available for trading
          format: double
          readOnly: true
          example: 0
        lower_circuit_limit:
          type: number
          description: The lower circuit of symbol
          format: double
          readOnly: true
          example: 119.0
        upper_circuit_limit:
          type: number
          description: The upper circuit of symbol
          format: double
          readOnly: true
          example: 121.0
        last_trade_time:
          type: string
          description: Time in milliseconds at which last trade happened
          readOnly: true
          example: 2022-11-16 06:14:48
        oi_day_high:
          type: number
          format: double
          readOnly: true
          example: 0
        oi_day_low:
          type: number
          format: double
          readOnly: true
          example: 0
      example:
        symbol: NHPC
        ohlc:
          high: 121.0
          low: 119.0
          close: 120.0
          open: 120.01
        lower_circuit_limit: 119.0
        upper_circuit_limit: 121.0
        total_buy_quantity: 0
        instrument_token: NSE_EQ|INE160A01022
        average_price: 120.01
        oi_day_low: 0
        oi_day_high: 0
        last_trade_time: 2022-11-16 06:14:48
        net_change: 0.01
        volume: 2344451
        depth:
          buy: 120.01
          sell: 120.01
        total_sell_quantity: 0
        oi: 0
        timestamp: 2022-11-16 06:14:48
        last_price: 120.01
    Ohlc:
      type: object
      properties:
        open:
          type: number
          description: The open price of the trading session
          format: double
          readOnly: true
          example: 120.01
        high:
          type: number
          description: The high price of the trading session
          format: double
          readOnly: true
          example: 121.0
        low:
          type: number
          description: The low price of the trading session
          format: double
          readOnly: true
          example: 119.0
        close:
          type: number
          description: The close price of the symbol from the previous session of
            trading
          format: double
          readOnly: true
          example: 120.0
      example:
        high: 121.0
        low: 119.0
        close: 120.0
        open: 120.01
    GetMarketQuoteOHLCResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MarketQuoteOHLC'
      example:
        data:
          key:
            ohlc:
              high: 121.0
              low: 119.0
              close: 120.0
              open: 120.01
            instrument_token: instrument_token
            last_price: 120.01
        status: success
    MarketQuoteOHLC:
      type: object
      properties:
        ohlc:
          $ref: '#/components/schemas/Ohlc'
        last_price:
          type: number
          description: The last traded price of symbol
          format: float
          readOnly: true
          example: 120.01
        instrument_token:
          type: string
      example:
        ohlc:
          high: 121.0
          low: 119.0
          close: 120.0
          open: 120.01
        instrument_token: instrument_token
        last_price: 120.01
    GetMarketQuoteLastTradedPriceResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MarketQuoteSymbolLtp'
      example:
        data:
          key:
            instrument_token: instrument_token
            last_price: 120.01
        status: success
    MarketQuoteSymbolLtp:
      type: object
      properties:
        last_price:
          type: number
          description: The last traded price of symbol
          format: double
          readOnly: true
          example: 120.01
        instrument_token:
          type: string
      example:
        instrument_token: instrument_token
        last_price: 120.01
    GetHistoricalCandleResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          $ref: '#/components/schemas/HistoricalCandleData'
      example:
        data:
          candles: "[[<br>        \"2022-11-21T00:00:00+05:30\",<br>        37.4,<br>\
            \        37.8,<br>        36.95,<br>        37.6,<br>        5539471,<br>\
            \        0<br>      ]]"
        status: success
    HistoricalCandleData:
      type: object
      properties:
        candles:
          type: array
          readOnly: true
          example: "[[<br>        \"2022-11-21T00:00:00+05:30\",<br>        37.4,<br>\
            \        37.8,<br>        36.95,<br>        37.6,<br>        5539471,<br>\
            \        0<br>      ]]"
          items:
            type: array
            readOnly: true
            example: "[[<br>        \"2022-11-21T00:00:00+05:30\",<br>        37.4,<br>\
              \        37.8,<br>        36.95,<br>        37.6,<br>        5539471,<br>\
              \        0<br>      ]]"
            items:
              type: object
              readOnly: true
              example: "[[<br>        \"2022-11-21T00:00:00+05:30\",<br>        37.4,<br>\
                \        37.8,<br>        36.95,<br>        37.6,<br>        5539471,<br>\
                \        0<br>      ]]"
      description: Get OHLC values for all instruments across various timeframes
      example:
        candles: "[[<br>        \"2022-11-21T00:00:00+05:30\",<br>        37.4,<br>\
          \        37.8,<br>        36.95,<br>        37.6,<br>        5539471,<br>\
          \        0<br>      ]]"
    GetIntraDayCandleResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          $ref: '#/components/schemas/IntraDayCandleData'
      example:
        data:
          candles: "[[<br>        \"2022-11-21T00:00:00+05:30\",<br>        37.4,<br>\
            \        37.8,<br>        36.95,<br>        37.6,<br>        5539471,<br>\
            \        0<br>      ]]"
        status: success
    IntraDayCandleData:
      type: object
      properties:
        candles:
          type: array
          readOnly: true
          example: "[[<br>        \"2022-11-21T00:00:00+05:30\",<br>        37.4,<br>\
            \        37.8,<br>        36.95,<br>        37.6,<br>        5539471,<br>\
            \        0<br>      ]]"
          items:
            type: array
            readOnly: true
            example: "[[<br>        \"2022-11-21T00:00:00+05:30\",<br>        37.4,<br>\
              \        37.8,<br>        36.95,<br>        37.6,<br>        5539471,<br>\
              \        0<br>      ]]"
            items:
              type: object
              readOnly: true
              example: "[[<br>        \"2022-11-21T00:00:00+05:30\",<br>        37.4,<br>\
                \        37.8,<br>        36.95,<br>        37.6,<br>        5539471,<br>\
                \        0<br>      ]]"
      description: Get OHLC values for all instruments across various timeframes
      example:
        candles: "[[<br>        \"2022-11-21T00:00:00+05:30\",<br>        37.4,<br>\
          \        37.8,<br>        36.95,<br>        37.6,<br>        5539471,<br>\
          \        0<br>      ]]"
    WebsocketAuthRedirectResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          $ref: '#/components/schemas/WebsocketAuthRedirectResponseData'
      example:
        data:
          authorizedRedirectUri: authorizedRedirectUri
          authorized_redirect_uri: authorized_redirect_uri
        status: success
    WebsocketAuthRedirectResponseData:
      type: object
      properties:
        authorizedRedirectUri:
          type: string
          deprecated: true
        authorized_redirect_uri:
          type: string
      description: Response data for WebsocketAuthRedirectResponse
      example:
        authorizedRedirectUri: authorizedRedirectUri
        authorized_redirect_uri: authorized_redirect_uri
    TradeHistoryResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          type: array
          items:
            $ref: '#/components/schemas/TradeHistoryResponseTradeData'
        metaData:
          $ref: '#/components/schemas/TradeHistoryResponseMetaData'
      example:
        metaData:
          page:
            page_number: 5
            total_records: 2
            total_pages: 7
            page_size: 5
        data:
        - symbol: symbol
          amount: 6.0274563
          quantity: 0
          option_type: option_type
          instrument_token: instrument_token
          transaction_type: transaction_type
          trade_date: trade_date
          trade_id: trade_id
          price: 1.4658129
          segment: segment
          scrip_name: scrip_name
          exchange: exchange
          expiry: expiry
          isin: isin
          strike_price: strike_price
        - symbol: symbol
          amount: 6.0274563
          quantity: 0
          option_type: option_type
          instrument_token: instrument_token
          transaction_type: transaction_type
          trade_date: trade_date
          trade_id: trade_id
          price: 1.4658129
          segment: segment
          scrip_name: scrip_name
          exchange: exchange
          expiry: expiry
          isin: isin
          strike_price: strike_price
        status: success
    TradeHistoryResponseMetaData:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/TradeHistoryResponsePageData'
      example:
        page:
          page_number: 5
          total_records: 2
          total_pages: 7
          page_size: 5
    TradeHistoryResponsePageData:
      type: object
      properties:
        page_number:
          type: integer
          format: int32
        page_size:
          type: integer
          format: int32
        total_records:
          type: integer
          format: int32
        total_pages:
          type: integer
          format: int32
      example:
        page_number: 5
        total_records: 2
        total_pages: 7
        page_size: 5
    TradeHistoryResponseTradeData:
      type: object
      properties:
        exchange:
          type: string
        segment:
          type: string
        option_type:
          type: string
        quantity:
          type: integer
          format: int32
        amount:
          type: number
          format: float
        trade_id:
          type: string
        trade_date:
          type: string
        transaction_type:
          type: string
        scrip_name:
          type: string
        strike_price:
          type: string
        expiry:
          type: string
        price:
          type: number
          format: float
        isin:
          type: string
        symbol:
          type: string
        instrument_token:
          type: string
      example:
        symbol: symbol
        amount: 6.0274563
        quantity: 0
        option_type: option_type
        instrument_token: instrument_token
        transaction_type: transaction_type
        trade_date: trade_date
        trade_id: trade_id
        price: 1.4658129
        segment: segment
        scrip_name: scrip_name
        exchange: exchange
        expiry: expiry
        isin: isin
        strike_price: strike_price
    BrokerageData:
      type: object
      properties:
        total:
          type: number
          description: Total charges for the order
          format: float
          readOnly: true
        brokerage:
          type: number
          description: Brokerage charges for the order
          format: float
          readOnly: true
        taxes:
          $ref: '#/components/schemas/BrokerageTaxes'
        otherTaxes:
          $ref: '#/components/schemas/OtherTaxes'
        dpPlan:
          $ref: '#/components/schemas/DpPlan'
        other_charges:
          $ref: '#/components/schemas/OtherTaxes'
        dp_plan:
          $ref: '#/components/schemas/DpPlan'
      description: Response data for charges details
      example:
        brokerage: 6.0274563
        dpPlan:
          min_expense: 2.027123
          name: name
        dp_plan: null
        total: 0.8008282
        other_charges: null
        taxes:
          stamp_duty: 5.637377
          stt: 5.962134
          gst: 1.4658129
        otherTaxes:
          ipft: 9.301444
          sebi_turnover: 3.6160767
          transaction: 2.302136
          clearing: 7.0614014
    BrokerageTaxes:
      type: object
      properties:
        gst:
          type: number
          description: GST charges
          format: float
        stt:
          type: number
          description: STT charges
          format: float
        stamp_duty:
          type: number
          description: Stamp duty charges
          format: float
      description: Taxes levied on order
      readOnly: true
      example:
        stamp_duty: 5.637377
        stt: 5.962134
        gst: 1.4658129
    BrokerageWrapperData:
      type: object
      properties:
        charges:
          $ref: '#/components/schemas/BrokerageData'
      description: Response data for brokerage
      example:
        charges:
          brokerage: 6.0274563
          dpPlan:
            min_expense: 2.027123
            name: name
          dp_plan: null
          total: 0.8008282
          other_charges: null
          taxes:
            stamp_duty: 5.637377
            stt: 5.962134
            gst: 1.4658129
          otherTaxes:
            ipft: 9.301444
            sebi_turnover: 3.6160767
            transaction: 2.302136
            clearing: 7.0614014
    DpPlan:
      type: object
      properties:
        name:
          type: string
          description: Name
        min_expense:
          type: number
          description: Minimum expense charges
          format: float
      example:
        min_expense: 2.027123
        name: name
    GetBrokerageResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          $ref: '#/components/schemas/BrokerageWrapperData'
      example:
        data:
          charges:
            brokerage: 6.0274563
            dpPlan:
              min_expense: 2.027123
              name: name
            dp_plan: null
            total: 0.8008282
            other_charges: null
            taxes:
              stamp_duty: 5.637377
              stt: 5.962134
              gst: 1.4658129
            otherTaxes:
              ipft: 9.301444
              sebi_turnover: 3.6160767
              transaction: 2.302136
              clearing: 7.0614014
        status: success
    OtherTaxes:
      type: object
      properties:
        transaction:
          type: number
          description: Transaction charges
          format: float
        clearing:
          type: number
          description: Clearing charges
          format: float
        ipft:
          type: number
          description: IPF charges
          format: float
        sebi_turnover:
          type: number
          description: SEBI turnover charges
          format: float
      example:
        ipft: 9.301444
        sebi_turnover: 3.6160767
        transaction: 2.302136
        clearing: 7.0614014
    CancelOrderData:
      type: object
      properties:
        order_id:
          type: string
          description: Reference order ID
          readOnly: true
          example: "1644490272000"
      description: Response data for Cancel order request
      example:
        order_id: "1644490272000"
    CancelOrderResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          $ref: '#/components/schemas/CancelOrderData'
      example:
        data:
          order_id: "1644490272000"
        status: success
    OAuthClientException:
      type: object
      properties:
        cause:
          $ref: '#/components/schemas/OAuthClientException_cause'
        stackTrace:
          type: array
          items:
            $ref: '#/components/schemas/OAuthClientException_cause_stackTrace'
        message:
          type: string
        suppressed:
          type: array
          items:
            $ref: '#/components/schemas/OAuthClientException_cause_suppressed'
        localizedMessage:
          type: string
    LogoutResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - error
          - partial_success
        data:
          type: boolean
          description: Logout status
      example:
        data: true
        status: success
    OAuthClientException_cause_stackTrace:
      type: object
      properties:
        classLoaderName:
          type: string
        moduleName:
          type: string
        moduleVersion:
          type: string
        methodName:
          type: string
        fileName:
          type: string
        lineNumber:
          type: integer
          format: int32
        className:
          type: string
        nativeMethod:
          type: boolean
    OAuthClientException_cause_suppressed:
      type: object
      properties:
        stackTrace:
          type: array
          items:
            $ref: '#/components/schemas/OAuthClientException_cause_stackTrace'
        message:
          type: string
        localizedMessage:
          type: string
    OAuthClientException_cause:
      type: object
      properties:
        stackTrace:
          type: array
          items:
            $ref: '#/components/schemas/OAuthClientException_cause_stackTrace'
        message:
          type: string
        suppressed:
          type: array
          items:
            $ref: '#/components/schemas/OAuthClientException_cause_suppressed'
        localizedMessage:
          type: string
  securitySchemes:
    OAUTH2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://api-v2.upstox.com/v2/login/authorization/dialog
          tokenUrl: https://api-v2.upstox.com/v2/login/authorization/token
          scopes:
            read: Read access
            write: Write access
